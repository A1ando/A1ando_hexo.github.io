<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo + GitHub搭建静态博客</title>
    <url>/post/1438a165.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>很早就有搭建静态博客的想法，作为一个小白，只能照着教程生搬硬套。2020-06-20尝试Jekyll + GitHub的方法，折腾一天，无法安装Jekyll，淦！2020-06-21，尝试Hexo + GitHub，一次成功。这里要感谢Royce的博客，教程很清晰。</p>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/106531722" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/106531722</a></p>
</blockquote>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>这是博客的第一篇文章，留念撒花^_^</p>
<p>将记录个人的生活、学习。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-theme-NexT 主题优化总结</title>
    <url>/post/ad21ae23.html</url>
    <content><![CDATA[<hr>
<p><strong>声明</strong>：本文大量内容来源于网络，由作者综合整理，如涉及侵权，请联系作者更改。正文内容中提到的主题NexT版本为8.0.0-rc.3（在主题文件夹<code>package.json</code>中可查看）</p>
<p><strong>转载</strong>：<a href="https://blog.csdn.net/qq_35396510/article/details/105953460?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase#%E7%BD%91%E7%AB%99%E5%BA%95%E9%83%A8%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4" target="_blank" rel="noopener">蔚来唔：hexo 主题 next7.8 版本配置美化</a></p>
<p>​            <a href="http://www.dragonstyle.win/3358042383.html#more" target="_blank" rel="noopener">dragonstyle: Hexo+Next主题优化</a></p>
<p>​            以及其他作者</p>
<hr>
<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg1f663w1sj20xc0dw3z2.jpg" alt="0e1132e2ce2adf445889c83a80d89ded.jpg"></p>
<a id="more"></a>

<h2 id="使用手册（中文）"><a href="#使用手册（中文）" class="headerlink" title="使用手册（中文）"></a>使用手册（中文）</h2><blockquote>
<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></p>
</blockquote>
<h2 id="如何让首页文章部分显示"><a href="#如何让首页文章部分显示" class="headerlink" title="如何让首页文章部分显示"></a>如何让首页文章部分显示</h2><p>next主题默认的是将你的文章全篇显示在自己的首页上，这就会导致一个问题，首页各个文章太长了不利于翻阅，那如何部分显示自己的文章呢？很简单，只要在个人的文章Markdown 中在想要显示的文章部分下面加上代码<code>&lt;!--more--&gt;</code>，即可只在首页显示所需的文章部分。</p>
<h2 id="添加阅读全文"><a href="#添加阅读全文" class="headerlink" title="添加阅读全文"></a>添加<code>阅读全文</code></h2><p>网上查了好多资料始终都没得到解决如何去设置“阅读全文”。最后查了最细的next7.6文档才发现还要下载插件，然后在主题配置文件<code>_config.yml</code>配置下就好了。<br>一，在博客目录下执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure>

<p>二，在站点配置文件<code>_config.yml</code>添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">excerpt:</span><br><span class="line">  depth: 10</span><br><span class="line">  excerpt_excludes: []</span><br><span class="line">  more_excludes: []</span><br><span class="line">  hideWholePostExcerpts: true</span><br></pre></td></tr></table></figure>

<p>next7.6最新文档<a href="https://github.com/chekun/hexo-excerpt" target="_blank" rel="noopener">添加链接描述</a></p>
<p>以上方法不行的话 在博客配置文件 <code>_config.yml</code>里 <code>excerpt_description</code> 改为<code>true</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br></pre></td></tr></table></figure>

<h2 id="归档"><a href="#归档" class="headerlink" title="归档"></a>归档</h2><p>NexT主题自带的归档页面叫做（archives）利用<code>hexo new page &quot;xxx&quot;</code>生成一个新页面，此时<code>Hexo</code>会自动在<code>~\hexo\source\</code>目录下生成一个<code>xxx</code>目录，进入这个目录，你会发现<code>index.md</code>这个文件，这个文件可以使用<code>Markdown</code>语法或<code>html</code>标签来进行编辑，按照你想要的效果去编辑这个文件，最终效果会展示在你新建的这个页面上。</p>
<p>接着再把这个页面放到顶部的菜单栏，这个只用修改<code>主题配置文件</code>内的<code>menu</code>配置即可。</p>
<h2 id="修改站点icon"><a href="#修改站点icon" class="headerlink" title="修改站点icon"></a>修改站点icon</h2><p>当套用完next主题后，个人博客的站点图标会自动为next的logo，作为博主当然不能忍这个logo啦，那怎么修改呢？</p>
<p>我们打开next的主题配置文件会发现有这样的设定：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: &#x2F;images&#x2F;favicon-16x16-next.png</span><br><span class="line">  medium: &#x2F;images&#x2F;favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: &#x2F;images&#x2F;apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: &#x2F;images&#x2F;logo.svg</span><br></pre></td></tr></table></figure>

<p>这就可以很清晰地发现去哪里修改了，只要在对应的路径上把原有的图片文件给替换成我们需要的文件就行了。这里给大家提供一个网站用于生成所需的icon同尺寸图像：<a href="http://www.favicon-generator.org/" target="_blank" rel="noopener">favicon-generator</a></p>
<h2 id="添加字数统计和阅读时长"><a href="#添加字数统计和阅读时长" class="headerlink" title="添加字数统计和阅读时长"></a>添加字数统计和阅读时长</h2><p>转至于<code>https://www.himmy.cn/2019/07/06/hexo博客next主题下添加字数统计和阅读时长/</code></p>
<p>安装<code>hexo-symbols-count-time</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<p>在站点配置文件添加如下配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true                # 文章字数统计</span><br><span class="line">  time: true                   # 文章阅读时长</span><br><span class="line">  total_symbols: true          # 站点总字数统计</span><br><span class="line">  total_time: true             # 站点总阅读时长</span><br><span class="line">  exclude_codeblock: false     # 排除代码字数统计</span><br></pre></td></tr></table></figure>

<p>在NexT主题配置文件添加如下配置（NexT主题已支持该插件，有的话无需再添加，否则出错）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-time</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）</span><br><span class="line">  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span><br><span class="line">  item_text_total: false   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span><br><span class="line">  awl: 4                   # Average Word Length</span><br><span class="line">  wpm: 275                 # Words Per Minute（每分钟阅读词数）</span><br><span class="line">  suffix: mins.</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>站点统计</p>
<p><img data-src="https://img-blog.csdnimg.cn/20190625234737709.png" alt="img"></p>
<p>文章统计</p>
<p><img data-src="https://img-blog.csdnimg.cn/20190625234838119.png" alt="img"></p>
<p>参考<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">theme-next/hexo-symbols-count-time</a></p>
<h2 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h2><p>1、在根目录source（此目录下有<code>_posts</code>文件夹）下新建 <code>_data/styles.styl</code>，将下列代码添加进去</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">  background-image:url(&#x2F;images&#x2F;assets&#x2F;background.jpg);</span><br><span class="line">  background-position:center;</span><br><span class="line">  background-size: cover;</span><br><span class="line">  background-repeat:no-repeat;</span><br><span class="line">  background-attachment: fixed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、修改主题配置文件<code>_config.yml</code>解锁style</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Define custom file paths.</span><br><span class="line"># Create your custom files in site directory &#96;source&#x2F;_data&#96; and uncomment needed files below.</span><br><span class="line">custom_file_path:</span><br><span class="line">  #head: source&#x2F;_data&#x2F;head.njk</span><br><span class="line">  #header: source&#x2F;_data&#x2F;header.njk</span><br><span class="line">  #sidebar: source&#x2F;_data&#x2F;sidebar.njk</span><br><span class="line">  #postMeta: source&#x2F;_data&#x2F;post-meta.njk</span><br><span class="line">  #postBodyEnd: source&#x2F;_data&#x2F;post-body-end.njk</span><br><span class="line">  #footer: source&#x2F;_data&#x2F;footer.njk</span><br><span class="line">  #bodyEnd: source&#x2F;_data&#x2F;body-end.njk</span><br><span class="line">  #variable: source&#x2F;_data&#x2F;variables.styl</span><br><span class="line">  #mixin: source&#x2F;_data&#x2F;mixins.styl</span><br><span class="line">  style: source&#x2F;_data&#x2F;styles.styl</span><br></pre></td></tr></table></figure>

<p>3、将自己喜欢的图片命名为<code>background.jpg</code>放在主题目录中的<code>/source/images/assets</code>下。</p>
<h2 id="修改文章间分割线"><a href="#修改文章间分割线" class="headerlink" title="修改文章间分割线"></a>修改文章间分割线</h2><p>打开 <code>themes/next/source/css/_common/components/post/post-eof.styl</code> ,修改：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.post-eof &#123;</span><br><span class="line">  background: $grey-light;</span><br><span class="line">  height: 1px;</span><br><span class="line">  margin: $post-eof-margin-top auto $post-eof-margin-bottom;</span><br><span class="line">  width: 100%;&#x2F;&#x2F; 修改此处数据，100%为最长</span><br><span class="line"></span><br><span class="line">  .post-block:last-of-type &amp; &#123;</span><br><span class="line">    display: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="文章顶部显示更新时间"><a href="#文章顶部显示更新时间" class="headerlink" title="文章顶部显示更新时间"></a>文章顶部显示更新时间</h2><p>打开主题配置文件 <code>_config.yml</code> ,搜索关键字 <code>updated_at</code> 设置为 <code>true</code> ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Post meta display settings</span><br><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at: ture</span><br><span class="line">  categories: true</span><br></pre></td></tr></table></figure>

<h3 id="添加-README-md-文件"><a href="#添加-README-md-文件" class="headerlink" title="添加 README.md 文件"></a>添加 README.md 文件</h3><p>每个项目下一般都有一个 <code>README.md</code> 文件，但是使用 <code>hexo</code> 部署到仓库后，项目下是没有 README.md 文件的。</p>
<p>在 <code>Hexo</code> 目录下的 <code>source</code> 根目录下添加一个 <code>README.m</code>d 文件，修改站点配置文件 <code>_config.yml</code> ，将 <code>skip_render</code> 参数的值设置为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Directory</span><br><span class="line">...</span><br><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure>

<p>保存退出即可。再次使用 <code>hexo d</code> 命令部署博客的时候就不会在渲染 <code>README.md</code> 这个文件了。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>待续…</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>theme</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>辅料的关键质量属性研究与控制</title>
    <url>/post/cddda33c.html</url>
    <content><![CDATA[<p><strong>转载</strong> 梅希 <a href="javascript:void(0);">药事纵横</a> <em>2018-05-22</em></p>
<p>药用辅料是指生产药品时处方中使用到的赋形剂和添加剂，是除了活性成分（原料药，API）或前体药物以外，在安全性方面已进行了合理评估的物质。辅料除了赋形、充当载体、提高稳定性外，还具有增溶、助溶、调节药物释放等重要功能，是可能会影响到制剂的质量、安全性和有效性的重要成分。在制剂制备过程中，药用辅料选用是否得当会影响制剂的安全性、有效性、稳定性、经济性和顺应性。</p>
<p>本文通过围绕辅料的关键质量属性，通过几个案例展示了辅料功能和性质对制剂研发的影响，并总结了辅料质量属性的分析技术，旨在提示广大研发人员重视辅料的质量研究与控制。</p>
<a id="more"></a>

<hr>
<h2 id="1、什么是辅料的关键质量属性（CQA）？"><a href="#1、什么是辅料的关键质量属性（CQA）？" class="headerlink" title="1、什么是辅料的关键质量属性（CQA）？"></a><strong>1、什么是辅料的关键质量属性（CQA）？</strong></h2><p>辅料可以有多种分类方式，如下图可见，包括有机辅料、无机辅料，每类别根据结构不同都可以分为简单（结构简单、明确）和复杂（结构复杂、不明确）的，根据来源不同，分为合成、半合成、天然的辅料。</p>
<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03dvy9fej20fe05tq31.jpg" alt="640.jpg"></p>
<p>关键质量属性是物理的、化学的、生物的、微生物的属性和特性，这个属性应被限定在一个适当的限度、范围内，以确保产品的质量。</p>
<p>对于原料药而言，可能包括质量标准范围内的，如有关物质、含量、异构体、水分、干燥失重、残留溶剂、溶解性等，还有可能包括与制剂的溶出度、生物利用度、稳定性、工艺等相关的晶型、粒度、晶癖。</p>
<p>而对于辅料而言，一般包括杂质、粒度、粘度、pH、分子量分布等特性。与原料不同，辅料的关键质量属性有时很难发现，由于受到API（性质、剂量大小）、处方（组成、比例）、生产工艺等的影响，某种属性（例如粘度）对于某药物可能是关键的，而对另一种药物，或另一个不同剂量的药物而言，可能就不是关键的，也就是说辅料属性的发现和确定是否关键与很多因素有关，如果在研发初期研究不充分、没有发现、没有总结，可能就不会发现辅料的关键质量属性，即使一次通过生物等效性试验（BE），也难保后期放大、持续生产、临床安全性、有效性方面不出问题。</p>
<p>因此，在研究过程中，我们还应该把更多的精力放在系统研究辅料特性上，细致思考和观察，把辅料的CQAs与成品的处方组成、生产工艺和CQAs结合起来，找到其中的因果关系。</p>
<h2 id="2、辅料性质差异从何而来？"><a href="#2、辅料性质差异从何而来？" class="headerlink" title="2、辅料性质差异从何而来？"></a><strong>2、辅料性质差异从何而来？</strong></h2><p>不难理解，与API一样，辅料的理化性质、机械性质的差异也是由其生产工艺决定的，不同的生产工艺（或参数）会生产出不同性质的辅料。如果辅料生产的起始物料、生产工艺（如全合成、半合成、发酵）、生产设备、生产规模、工艺参数等发生了变化，那么辅料中也就可能产生新的工艺杂质，也可能导致某些理化性质发生变化，甚至引起机械性质、粉体学性质的变化，例如不同pH、不同粒度等。</p>
<p>一般来讲，对于通过发酵、降解工艺生产的辅料，其发生质量差异的可能性比全合成的辅料要大。因为前两者的生产工艺有时较复杂，工艺参数控制往往较宽，而后者如果起始物料不变，工艺参数调整的空间较小。</p>
<p>在原辅料相容性过程中，在不同厂家辅料的筛选中，在稳定性的放样考察中，要特别注意研究和总结不同性质的辅料对有关物质、含量、溶出等CQA的影响，然后去分析辅料的哪些属性会引起这种结果，是水分、pH、杂质、过氧化物、粒度还是其他。对于特殊工艺制备的制剂（如缓释制剂），特殊BCS分类的药物（如BCS II或IV类）来讲，辅料的特性研究更加关键。研发中，要关注不同供应商来源的同种辅料、相同厂家的不同批次辅料之间的差异，尽可能多了解辅料的生产工艺。</p>
<blockquote>
<p> BCS分类:<br> class1 高溶高渗<br> class2 低溶高渗<br> class3 高溶低渗<br> class4 低溶高渗</p>
</blockquote>
<p>辅料CQA能否发现，与人员水平有关、工艺有关、还与所选择检测方法和技术有关。</p>
<h2 id="3、影响制剂CQA的辅料特性"><a href="#3、影响制剂CQA的辅料特性" class="headerlink" title="3、影响制剂CQA的辅料特性"></a><strong>3、影响制剂CQA的辅料特性</strong></h2><p>辅料对制剂成品质量属性、生产工艺的影响是通过辅料的功能、辅料的质量以及辅料与辅料、辅料与药物的相互作用来实现的。辅料的性质可分为物理性质和化学性质两大类。在物理性质中，常见的性质例如粉体学性质（流动性、可压性、粒度分布、形态等）；化学性质中，常见的性质例如化学结构式、取代度、杂质等。目前有非常多的关于辅料特性差异的报道，作者仅仅列出几个案例来说明问题，其他代表性案例，读者可自己可通过文献查找，不再一一列举。</p>
<h3 id="案例1：不同粉体学性质辅料对直压工艺产品质量的影响"><a href="#案例1：不同粉体学性质辅料对直压工艺产品质量的影响" class="headerlink" title="案例1：不同粉体学性质辅料对直压工艺产品质量的影响"></a><strong>案例1：不同粉体学性质辅料对直压工艺产品质量的影响</strong></h3><p>Parteck®M200、M100 直压甘露醇和直压甘露醇C、D 这四种不同型号的甘露醇与主药相容性好，但不同型号的甘露醇之间还是存在一些差异[1]。</p>
<center>表1. 粉体学测定结果</center>

<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03h2z4qvj20fe053aa9.jpg" alt="640 (1).jpg"></p>
<p>一般来说，卡式指数在25%以下时流动性较好，卡式指数越小，粉体的填充性越好，相反卡氏指数较大，可压性好。通过表1可以看出除Parteck® M100 直压甘露醇外的3 种型号甘露醇及其混合药物后测得的卡式指数均小于20%，而Parteck® M100 直压甘露醇及其混粉的卡式指数也不大于25%，在填充性和可压性方面各有所长。</p>
<p>然而，在不同溶出介质中的溶出曲线表明，在水中，含Parteck® M200、M100直压甘露醇的模型药物吲达帕胺的溶出结果优于直压甘露醇C、D，而在其他3 种溶出介质中的4条溶出曲线趋势一致，说明药物与Parteck® M200、M100 直压甘露醇混合压片后的溶出度具有一定优势。</p>
<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03v6e46pj20j80gzmyj.jpg" alt="Snipaste_2020-06-21_18-51-20.jpg"></p>
<center>图1. 片剂在水（A）、0.1mol/L 盐酸（B）、pH 4.5 醋酸缓冲液（C）和pH 6.8 磷酸缓冲液（D）中的溶出曲线</center>

<p>通过这个案例可知，相同种类辅料不同型号、不同粉体学性质的辅料在特定处方、工艺条件下，对制剂成品的关键质量属性影响不同，因此对于粉末直压工艺而言辅料的粉体学指标是一个关键因素。</p>
<h3 id="案例2：不同粒度甘露醇对成品含量的影响"><a href="#案例2：不同粒度甘露醇对成品含量的影响" class="headerlink" title="案例2：不同粒度甘露醇对成品含量的影响"></a><strong>案例2：不同粒度甘露醇对成品含量的影响</strong></h3><p>采用粒径较大的物料甘露醇200SD和氯雷他定混合粉压片，发现压片过程中的硬度、厚度、重量差异等均符合要求，但压片结束时片子的含量偏高，是什么原因呢？</p>
<p>原来200SD在混合粉中先从料斗中流出，而粒径较小的主药粘在料斗壁上，最后流出，导致压片结束时饲料器及片子含量偏高。当换用粒度较小的甘露醇100SD 时，由于100SD的粒径和主药差异不大，因此并没有出现分层的现象，示意图如图2 所示[2]。</p>
<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03y0uuzcj20dj07mt8m.jpg" alt="640 (4).webp"></p>
<center>图2. 粉体在压片过程中料斗内的流变学</center>

<p>作者在对压片过程中模孔和片子的数据进行分析时发现，甘露醇100SD和200SD混合粉体表现出了相同的现象：模孔内的含量均比同时间的片子含量偏高。产生这种现象的原因是什么呢？作者认为，对于直接压片工艺，粉末并未经过制粒过程，粉末分子间仅有微弱的范德华力连接，很容易受到外界的影响，上冲在压模孔里的物料时，造成了粒径较小的主药飞散出模孔而使最终片子的含量相对偏低。</p>
<p>通过这个案例可知，相同种类不同粒度的辅料，在特定药物、处方、工艺条件下，对成品的生产工艺和关键质量属性的影响不同，因此“粒度”是一个关键因素，在一个选定的制剂工艺条件下，需要对辅料提出“特殊要求”。</p>
<h3 id="案例3：不同来源SLS对制剂工艺的影响"><a href="#案例3：不同来源SLS对制剂工艺的影响" class="headerlink" title="案例3：不同来源SLS对制剂工艺的影响"></a><strong>案例3：不同来源SLS对制剂工艺的影响</strong></h3><p>在设计难溶性药物口服固体制剂时，制剂人员面临着极大的挑战，特别是高剂量药物。提高溶出度和/或溶出速率是提高难溶解性药物口服生物利用度的必要条件。目前有许多方法可以提高溶出，如采用酸化剂或碱化剂调节pH值、络合物、固体分散体、制备成无定型药物、减小粒度以及使用表面活性剂等。表面活性剂可以在提高药物溶解度方便发挥一种或多种作用，如改善药物的润湿性和溶解性，并减少或防止药物沉淀。从生产角度而言，使用表面活性剂提高溶解度比其他非常规剂型（如固体分散体）更适合生产与降低成本。</p>
<p>十二烷基硫酸钠（SLS）是一种很常用的阴离子型表面活性剂，具有很强的增溶能力，用在固体口服制剂中提高难溶性药物的溶解度。除了上述作用之外，SLS还会影响口服固体制剂的生产过程。不同来源的SLS含有不同含量的表面活性杂质，其中大部分是同源的醇类，其表面活性在SLS的两个数量级以上（见表2）。这些已知或未知的杂质可能有助于表面活性剂的功能，并改变SLS在溶出介质或固体口服制剂中提高药物溶解性时的增溶作用。不同来源的SLS可能具有不同的物理性质，如熔点、粒度、微观形态，这可能影响药物的溶出和生产过程[3]。</p>
<center>表2. 不同来源的SLS检测结果</center>

<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03ya24c1j20ib0bv75j.jpg" alt="Snipaste_2020-06-21_18-52-48.jpg"></p>
<p>不同来源的SLS的扫描电镜图如下所示，Spectrum公司SLS大多数颗粒具有更少的球形形状，长度大于25μm，一些聚集体大于150μm。Cognis公司的SLS大多数颗粒是较大、多孔、不规则的聚集体。Sigma公司的SLS颗粒呈薄片状，表面有层状结构，颗粒的直径约为2μm至数百微米。三个公司的SLS粒度分布测定结果差异很大。</p>
<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03ykd2enj20h80dht9x.jpg" alt="Snipaste_2020-06-21_18-53-01.jpg"></p>
<center>图3. Spectrum公司的SLS扫描电镜图</center>

<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03yry96qj20hp0dnq4a.jpg" alt="Snipaste_2020-06-21_18-53-08.jpg"></p>
<center>图4. Cognis公司的SLS扫描电镜图</center>

<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03yyzes9j20ht0d775l.jpg" alt="Snipaste_2020-06-21_18-53-15.jpg"></p>
<center>图5. Sigma公司的超纯SLS扫描电镜图</center>

<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03z5uw24j20rc0g1gn0.jpg" alt="Snipaste_2020-06-21_18-53-25.jpg"></p>
<center>图6. Spectrum、Cognis、Sigma公司的SLS粒度分布图（未微粉、微粉）</center>


<p>在湿法制粒中，不同来源和不同粒度的SLS所需的水量和制粒时间也不同。含有SpectrumSLS的辅料制粒时的用水量比其他两个来源的SLS少。因此在固定制粒时间时制粒所需的水量与SLS的表面张力的顺序相同：Spectrum &lt; Cognis &lt; Sigma（超纯）。</p>
<center>表3. 不同来源和不同粒度的SLS所需的水量和制粒时间</center>

<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03zbrg12j20j704ft92.jpg" alt="Snipaste_2020-06-21_18-53-34.jpg"></p>
<p>根据上述案例可见，在进行含有SLS的制剂处方工艺研究中有必要研究不同来源SLS的性质、粒度分布等性质，必要时制定辅料的内控标准。</p>
<h3 id="案例4：辅料化学结构式与功能的相关性"><a href="#案例4：辅料化学结构式与功能的相关性" class="headerlink" title="案例4：辅料化学结构式与功能的相关性"></a><strong>案例4：辅料化学结构式与功能的相关性</strong></h3><p>某药物的片芯辅料之一为all-rac-α-Tocopherol，中文名为α-生育酚，结构式中含有酚羟基，作为抗氧剂使用。但有时研发人员误将其认为是维生素E而使用了中国药典中的原料药维生素E作为抗氧剂使用，从结构式中可见由于药典中的维生素E为α-生育酚的醋酸酯，因此已没有抗氧化作用了。所以，使用辅料时应注意辅料的化学结构和其作用的关系。</p>
<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03zknhsjj20hd08aglz.jpg" alt="Snipaste_2020-06-21_18-53-45.jpg"></p>
<p><img data-src="http://ww1.sinaimg.cn/large/c2c8e24dly1gg03zos6cvj20pn0jmjsl.jpg" alt="Snipaste_2020-06-21_18-54-03.jpg"></p>
<h3 id="案例5：辅料中的活性杂质"><a href="#案例5：辅料中的活性杂质" class="headerlink" title="案例5：辅料中的活性杂质"></a><strong>案例5：辅料中的活性杂质</strong></h3><p>辅料中也有很多类活性杂质，这类杂质可以与API发生反应。以过氧化物为例，聚山梨酯、聚乙烯吡咯烷酮（PVP）、聚乙二醇（PEG）、羟丙基纤维素（HPC）等是含有过氧化物的辅料，如果根据文献报道或研究发现API容易被氧化，由于不同的API对氧化的敏感性可能不同，那么在处方筛选阶段就需要设计相应的实验来研究论证这些辅料中不同过氧化物含量对制剂中杂质的影响，根据数据结果来确定该辅料中过氧化物需要控制在什么限度才能保证制剂的质量和稳定性，保证杂质在整个货架期内的增加趋势不高于原研制剂。</p>
<p>辅料中的过氧化物包括过氧化氢(H2O2)，氢过氧化物(ROOH)，有机过氧化物(ROOR’)等。过氧化物常用于聚合物的生产，在纯化过程中很难被完全去除，此外，在聚合物的降解时也可能会产生过氧化物。不同的生产条件、纯化工艺、不同存放时间、不同生产厂家、以及相同厂家不同批次之间，过氧化物的含量都可能存在较大差异。</p>
<p>过氧化物可以通过以下三种途径与API发生氧化反应：亲核加成、亲电取代、金属存在下的自由基反应。如果发现API中的氧化杂质增加，且处方中包括上述辅料应进行由针对性的研究和控制。</p>
<p>醛类、有机酸（如甲酸、乙酸等）、还原糖、元素杂质等辅料中活性杂质的控制综见美国基因泰克公司的综述[4]。 </p>
<h2 id="4、辅料CQA的分析技术"><a href="#4、辅料CQA的分析技术" class="headerlink" title="4、辅料CQA的分析技术"></a><strong>4、辅料CQA的分析技术</strong></h2><p>从上述案例中可见，辅料变异有时会显著影响自身的性质和功能，也会对制剂的关键质量属性和工艺的选择重要有影响。我国仿制药一致性评价申报资料中的P.4部分就要求对辅料的控制进行研究和说明。因此，在仿制药研发中，不但制剂人员应该对辅料有深入了解，分析人员也应该掌握评价辅料特性的分析方法，以促进对QbD药品研发先进理念的理解。</p>
<p>从上文分析可知，辅料差异的来源包括：source to source，site to site，batch to batch， supplier to supplier，year to year等。为了表达这些差异，我们可以从“微观”和“宏观”两个角度进行分析。</p>
<p>辅料的微观属性分析技术。X射线粉末衍射法、DCS法、TGA法、NIR法、固态核磁SSNMR、KFT或干燥失重法、pH测定法等方法常用来对辅料的微观属性进行分析，如结构式、晶型或无定型、熔点、水分、酸碱度等。其中，SSNMR法区分辅料化学结构、NIR法在区分辅料批间差异方面具有重要应用。</p>
<p>辅料的宏观属性分析技术。辅料粉体学特性的测定方法，如流动性、堆密度、压缩指数、粒度分布、扫描电镜（SEM）等指标都有相关的检测技术，详见USP&lt;1174&gt; POWDER FLOW粉体流动性等其他检测技术章节。</p>
<p>当辅料的来源、生产工艺、稳定性等发生变化时，采用上述分析技术进行综合分析，往往可以发现辅料性质的差异，当然辅料的检测方法也是需要进行方法学验证的。</p>
<h2 id="5、辅料质控相关的指导原则和质量标准"><a href="#5、辅料质控相关的指导原则和质量标准" class="headerlink" title="5、辅料质控相关的指导原则和质量标准"></a><strong>5、辅料质控相关的指导原则和质量标准</strong></h2><p>ICHM7和ICHQ3D大家经常会用于成品的质量控制，如原料药或制剂。但是，对辅料的质量控制而言，也有特殊规定。例如ICHM7规定对已上市药品中使用的辅料、香精、着色剂等可不进行基因毒性杂质的有关研究，然而对于新辅料而言，ICHM7要求对首次在制剂中使用到的辅料进行安全风险评估，因此这类辅料需要关注遗传毒性杂质的控制。ICHQ3D用于原料药和制剂的金属杂质控制，对于辅料而言，也可能引入金属杂质，如Pt、Pd等，ICHQ3D同样适用于辅料的金属杂质研究，常用的方法为ICP-MS。</p>
<p>此外，EP、USP-NF、JP等国外药典标准也经常收载ChP没有收载的辅料标准，在对辅料标准进行分析研究时，应考察将其汇总对比，详细标准检测方法和限度，根据对制剂产品关键质量属性的影响，制定相应的控制指标和控制方法、限度标准，从物料的源头上来确保产品质量的稳定性和均一性。</p>
<h2 id="6、QbD研发理念与辅料控制"><a href="#6、QbD研发理念与辅料控制" class="headerlink" title="6、QbD研发理念与辅料控制"></a><strong>6、QbD研发理念与辅料控制</strong></h2><p>QbD理念通过ICHQ8、Q9、Q10指导原则进行了表达，QbD强调对制剂处方、工艺的理解和控制，其中重点概念包括目标产品质量概括QTPP、关键质量属性CQA、关键物料属性CMA、设计空间DS等。因此应该对原料、辅料、包材、工艺、设备、分析方法等进行充分的研究与理解，对今后可能出现变异进行提前判断。</p>
<p>对于辅料的选择，是药品研发中一个很重要的环节，辅料的选择影响生物利用度（BA）或生物等效性（BE）、药物稳定性以及生产重复性。有时，辅料选择时往往需要综合考虑很多问题，如为了提高生物利用度、生物等效性而牺牲一定程度的药物稳定性，这时就需要选择合理的包材或制定合理的控制策略来实现和保证。</p>
<p>把辅料的CQAs与制剂成品的QTPP联系起来，只要制定了辅料控制策略就能够保证产品符合要求，而为了完成这种“过程中的控制策略”，首先需要结合国内外药典标准对辅料的基本检测指标进行分析；其次需要结合辅料的厂家报告和自检结果分析存在的差异；第三需要结合制剂处方工艺研究寻找辅料的CQAs并制定适用于特定药物的内控标准。</p>
<p>辅料虽然无药理活性，但却是制剂的重要组成部分，缺少辅料制剂的性能是无法实现的。药品中使用到的辅料的性质往往是发生变化的，这些变化往往来源于生产工艺的变化。辅料的某种特性的变化会影响到制剂的性能和功能，应充分理解了这些变化对制剂关键质量属性的影响。多种辅料的分析检测技术为评估这些变化提供了方法，应注意积累和总结。此外，辅料的包装、贮藏条件对辅料质量的影响，例如光、氧、湿、热等因素都会促进辅料中过氧化物的形成，聚维酮等辅料使用中需注意包装的合理性和完整性。</p>
<p>可以预见，随着我国仿制药一致性评价工作的深入开展，人们对辅料关键质量属性的研究和控制将会得到前所未有的重视。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a><strong>参考文献</strong></h2><p>[1] 白璐,王博,吴疆,任晓文.不同型号甘露醇对吲达帕胺直接压片的影响研究[J].现代药物与临床,2014,29（4）：338-341<br>[2] 赵存婕.探讨不同粒度的甘露醇对于直接压片产品的影响[J].黑龙江医药,2014,27(3):559-562<br>[3] Dongmei Qiang, Jocelyn A.Gunn, Leon Schultz &amp; Z. Jane Li.Evaluation of the impact of sodium lauryl sulfate source variability on solid oral dosage form development [J]. Drug Development and Industrial Pharmacy, 2010; 36(12): 1486–1496.<br>[4] Kelly Zhang, Jackson D.Pellett, Ajit S. Narang, Y. John Wang, Yonghua Taylor Zhang. Reactive impurities in large and small molecule pharmaceutical excipients-A review [J]. Trends in Analytical Chemistry,101 (2018) 34-42.</p>
]]></content>
      <categories>
        <category>制剂</category>
      </categories>
      <tags>
        <tag>制剂</tag>
      </tags>
  </entry>
  <entry>
    <title>制剂工作机会</title>
    <url>/post/157e085.html</url>
    <content><![CDATA[<hr>
<p><strong>导读</strong>：对制剂公司了解不多，现收集工作机会，采集信息不定时更新。</p>
<hr>
<a id="more"></a>

<h2 id="上海"><a href="#上海" class="headerlink" title="上海"></a>上海</h2><h3 id="上海博志研新药物技术有限公司"><a href="#上海博志研新药物技术有限公司" class="headerlink" title="上海博志研新药物技术有限公司"></a>上海博志研新药物技术有限公司</h3><hr>
<p><a href="https://s.yaozh.com/Cro/firmdetail?id=4627" target="_blank" rel="noopener"><strong>简介</strong></a>：  前身迈柏医药成立于2007年，目前在上海张江高科技园区建有2500㎡研发场地，在四川成都设有临床研究团队，中间体及原料药业务的合作生产基地位于甘肃白银。近百人的员工队伍中，硕士博士占比接近50%。  公司主营业务范围包括高端仿制药研发、改良型新药设计及创新药研发、一致性评价全流程研究服务，以及高质量医药中间体及原料药定制。成立十年来已与扬子江药业、正大天晴、步长药业、广生堂药业等近百家国内外知名医药企业达成业务合作。  博志研新还是上海市高新技术企业、药智网&amp;西南证券评定，“中国新药研发企业五十强”，“2016中国医药研发企业影响力10强”，目前已在行业内率先通过ISO9001:2015质量认证。</p>
<p><strong>年销售额</strong>：1000~2000万</p>
<p><strong>公司地址</strong>：浦东新区松涛路647弄1号楼</p>
<p><strong>公司官网</strong>：<a href="http://www.bocimed.com" target="_blank" rel="noopener">http://www.bocimed.com</a></p>
<p><strong>主要部门</strong>：项目管理部、药物合成部、药物分析部、药物制剂部、注册部、药物情报信息部</p>
<p><strong>类型</strong>：民营企业、CRO、注册资金500万</p>
<p><a href="https://www.zhihu.com/question/318550192" target="_blank" rel="noopener"><strong>知乎评价</strong></a>：底层人员流动频繁，特别是分析；CRO特征，项目多，对个人技能发展有好处；</p>
<p><a href="https://jobs.51job.com/shanghai/co2629109.html#syzw" target="_blank" rel="noopener"><strong>职位</strong></a>：2020-06-24</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">薪资（万/月）</th>
<th align="left">任职资格</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>制剂研究员</strong></td>
<td align="center">0.6-1.5</td>
<td align="left">1、本科或以上学历，药物制剂或药学专业；<br>2、1-3年固体制剂研发项目工作经验；<br>3、熟悉制剂实验室常用设备的操作，能够查阅文献；</td>
</tr>
<tr>
<td align="center"><strong>制剂组长</strong></td>
<td align="center">1.5-3</td>
<td align="left">1、硕士以上学历，药物制剂或药学专业；<br>2、3年以上制剂工作经验，有成功的缓控释项目<br>     预BE或高难度液体制剂经验及相关资料撰写经验；<br>3、责任心强，勤奋踏实，团队合作意识，较强的学习能力。</td>
</tr>
<tr>
<td align="center"><strong>制剂项目负责人</strong></td>
<td align="center">1-1.8</td>
<td align="left">1、2年以上仿制药经验，至少包含固体或者液体制剂<br>       其中一种的处方工艺研究、中试放大、BE研究和<br>       CTD资料撰写等；<br>2、1个以上完整项目经验；<br/>3、有CRO企业工作经验优先。</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><strong>信息采集</strong></th>
<th><strong>最后更新时间</strong></th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://s.yaozh.com/Cro/firmdetail?id=4627" target="_blank" rel="noopener">药智通</a></td>
<td>2020-06-24</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>工作机会</category>
      </categories>
      <tags>
        <tag>制剂公司</tag>
      </tags>
  </entry>
  <entry>
    <title>Python笔记---list小结</title>
    <url>/post/587b69fb.html</url>
    <content><![CDATA[<h3 id="列表添加"><a href="#列表添加" class="headerlink" title="列表添加"></a>列表添加</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;list1 = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">21</span>]</span><br><span class="line">&gt;&gt;&gt;list1.append(<span class="number">0</span>)</span><br><span class="line">[<span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">21</span>, <span class="number">0</span>]</span><br><span class="line">&gt;&gt;&gt;list1.extend([<span class="string">'1'</span>, <span class="string">'2'</span>])</span><br><span class="line">[<span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="string">'1'</span>, <span class="string">'2'</span>]</span><br><span class="line">&gt;&gt;&gt;list1.insert(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">[<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="string">'1'</span>, <span class="string">'2'</span>]</span><br></pre></td></tr></table></figure>

<h3 id="列表删除-Ctrl-3将改行设置为h3"><a href="#列表删除-Ctrl-3将改行设置为h3" class="headerlink" title="列表删除//Ctrl+3将改行设置为h3"></a>列表删除//<code>Ctrl+3</code>将改行设置为h3</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;a = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>]</span><br><span class="line">&gt;&gt;&gt;a.remove(<span class="number">1</span>)</span><br><span class="line">&gt;&gt;&gt;a</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>]</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">del</span> a[<span class="number">5</span>]</span><br><span class="line">&gt;&gt;&gt;a</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>]</span><br><span class="line">&gt;&gt;&gt;list1.pop()</span><br><span class="line">[<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="string">'1'</span>]</span><br><span class="line">&gt;&gt;&gt;list1.pop(<span class="number">0</span>)</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="string">'1'</span>]</span><br></pre></td></tr></table></figure>

<h3 id="列表比较、in和not-in"><a href="#列表比较、in和not-in" class="headerlink" title="列表比较、in和not in"></a>列表比较、<code>in</code>和<code>not in</code></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;a = [<span class="number">123</span>]</span><br><span class="line">&gt;&gt;&gt;b = [<span class="number">234</span>]</span><br><span class="line">&gt;&gt;&gt;a &gt; b</span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&gt;&gt;&gt;list1 = [<span class="string">'abc'</span>]</span><br><span class="line">&gt;&gt;&gt;list2 = [<span class="string">"bcd"</span>]</span><br><span class="line">&gt;&gt;&gt;list1 &gt; list2</span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&gt;&gt;&gt;list3 = [<span class="number">123</span>, <span class="number">456</span>]</span><br><span class="line">&gt;&gt;&gt;list4 = [<span class="number">234</span>, <span class="number">123</span>]</span><br><span class="line">&gt;&gt;&gt;list3 &gt; list4</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">123</span> <span class="keyword">in</span> list3</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">456</span> <span class="keyword">not</span> <span class="keyword">in</span> list4</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>

<h3 id="列表中-和-操作符"><a href="#列表中-和-操作符" class="headerlink" title="列表中+和*操作符"></a>列表中<code>+</code>和<code>*</code>操作符</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;c = a + b</span><br><span class="line">&gt;&gt;&gt;c</span><br><span class="line">[<span class="number">123</span>, <span class="number">234</span>]</span><br><span class="line">&gt;&gt;&gt;a * <span class="number">3</span></span><br><span class="line">[<span class="number">123</span>, <span class="number">123</span>, <span class="number">123</span>]</span><br><span class="line">&gt;&gt;&gt;a</span><br><span class="line">[<span class="number">123</span>]</span><br><span class="line">&gt;&gt;&gt;b *= <span class="number">5</span></span><br><span class="line">&gt;&gt;&gt;b</span><br><span class="line">[<span class="number">234</span>, <span class="number">234</span>, <span class="number">234</span>, <span class="number">234</span>, <span class="number">234</span>]</span><br></pre></td></tr></table></figure>

<h3 id="列表计数、排序"><a href="#列表计数、排序" class="headerlink" title="列表计数、排序"></a>列表计数、排序</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;list1 = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">21</span>]</span><br><span class="line">&gt;&gt;&gt;list1.count(<span class="number">1</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line">&gt;&gt;&gt;list1.index(<span class="number">5</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line">&gt;&gt;&gt;list1.reverse()</span><br><span class="line">&gt;&gt;&gt;list1</span><br><span class="line">[<span class="number">21</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">&gt;&gt;&gt;list1.sort()</span><br><span class="line">[<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">21</span>]</span><br><span class="line">&gt;&gt;&gt;list1.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">&gt;&gt;&gt;list1</span><br><span class="line">[<span class="number">21</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">&gt;&gt;&gt;sorted(list1)</span><br><span class="line">[<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">21</span>]</span><br><span class="line">&gt;&gt;&gt;sorted(list1, reverse=<span class="literal">True</span>)</span><br><span class="line">[<span class="number">21</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure>

<h3 id="列表分片"><a href="#列表分片" class="headerlink" title="列表分片"></a>列表分片</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;a = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">&gt;&gt;&gt;b = a[::<span class="number">-1</span>]</span><br><span class="line">&gt;&gt;&gt;a</span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">&gt;&gt;&gt;b</span><br><span class="line">[<span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>]</span><br><span class="line">&gt;&gt;&gt;c = a[::<span class="number">2</span>]</span><br><span class="line">&gt;&gt;&gt;c</span><br><span class="line">[<span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>]</span><br><span class="line">&gt;&gt;&gt;d = a[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">&gt;&gt;&gt;d</span><br><span class="line">[<span class="number">3</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>多线程爬取内涵段子</title>
    <url>/post/7ff698ba.html</url>
    <content><![CDATA[<p>多线程爬取内涵段子中的内容，未对没有展开的内容就行爬出，具体代码如下：</p>
<a id="more"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Lock</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> current_thread</span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个爬虫类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Crawls</span><span class="params">(Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, url_queue, html_queue, crawlName)</span>:</span></span><br><span class="line">        Thread.__init__(self)</span><br><span class="line">        self.url_queue = url_queue</span><br><span class="line">        self.html_queue = html_queue</span><br><span class="line">        self.crawlName = crawlName</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64)\</span></span><br><span class="line"><span class="string">            AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106\</span></span><br><span class="line"><span class="string">            Safari/537.36"</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.url_queue.empty():</span><br><span class="line">            response = requests.get(self.url_queue.get(), headers=self.headers)</span><br><span class="line">            <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">                self.html_queue.put(response.text)</span><br><span class="line">        </span><br><span class="line"><span class="comment">#创建一个解析类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParseInfo</span><span class="params">(Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, html_queue, parseName, lock)</span>:</span></span><br><span class="line">        Thread.__init__(self)</span><br><span class="line">        self.html_queue = html_queue</span><br><span class="line">        self.parseName = parseName</span><br><span class="line">        self.lock = lock</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.html_queue.empty():</span><br><span class="line">            html = etree.HTML(self.html_queue.get())</span><br><span class="line">            span_contents = html.xpath(<span class="string">"//div[@class='content']/span[1]"</span>)</span><br><span class="line">            self.lock.acquire()</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">"duanzi.txt"</span>, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:<span class="comment">#这个打开关闭操作了3次</span></span><br><span class="line">                <span class="keyword">for</span> span <span class="keyword">in</span> span_contents:</span><br><span class="line">                    info = span.xpath(<span class="string">'string(.)'</span>)</span><br><span class="line">                    f.write(info + <span class="string">'\n'</span>)</span><br><span class="line">            self.lock.release()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#创建一个url队列</span></span><br><span class="line">    start_time = time.perf_counter()</span><br><span class="line">    url_queue = Queue()</span><br><span class="line">    <span class="comment">#创建一个接受html队列</span></span><br><span class="line">    html_queue = Queue()</span><br><span class="line">    base_url = <span class="string">'https://www.qiushibaike.com/text/page/&#123;&#125;/'</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">        tar_url = base_url.format(i)</span><br><span class="line">        url_queue.put(tar_url)</span><br><span class="line">    <span class="comment">#创建3个线程的爬虫</span></span><br><span class="line">    crawlNames = [<span class="string">'crawl1'</span>, <span class="string">'crawl2'</span>, <span class="string">'crawl3'</span>]</span><br><span class="line">    crawl_list = []</span><br><span class="line">    <span class="keyword">for</span> crawlName <span class="keyword">in</span> crawlNames:</span><br><span class="line">        crawl = Crawls(url_queue, html_queue, crawlName)</span><br><span class="line">        crawl.start()</span><br><span class="line">        crawl_list.append(crawl)</span><br><span class="line">    <span class="keyword">for</span> crawl <span class="keyword">in</span> crawl_list:</span><br><span class="line">        crawl.join()</span><br><span class="line">    <span class="comment">#创建解析线程</span></span><br><span class="line">    lock = Lock()</span><br><span class="line">    parseNames = [<span class="string">'parse1'</span>, <span class="string">'parse2'</span>, <span class="string">'parse3'</span>]</span><br><span class="line">    parse_list = []</span><br><span class="line">    <span class="keyword">for</span> parseName <span class="keyword">in</span> parseNames:</span><br><span class="line">        parse = ParseInfo(html_queue, parseName, lock)</span><br><span class="line">        parse.start()</span><br><span class="line">        parse_list.append(parse)</span><br><span class="line">    <span class="keyword">for</span> parse <span class="keyword">in</span> parse_list:</span><br><span class="line">        parse.join()</span><br><span class="line"></span><br><span class="line">    end_time = time.perf_counter()</span><br><span class="line">    print(<span class="string">'Runing time: %s '</span> % (end_time - start_time))</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title>爬取前程无忧（51jobs）</title>
    <url>/post/88ebc3e5.html</url>
    <content><![CDATA[<p>前程无忧是老资格招聘网站，信息齐全。但是每页51条信息，每一列没有排序功能，不利于求职者筛选信息，将列表爬取下来，用python或者excel进行分析比较简单。主要是节约时间，保护狗眼。</p>
<a id="more"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding = 'utf-8'</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> ceil</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">2020-07-09</span></span><br><span class="line"><span class="string">1、每一页应该有51项，因为有的公司后面有标签，所以xpath要注意，否则造成阵列不齐。</span></span><br><span class="line"><span class="string">2、薪资转换成统一格式，单位统一为K/月,见函数uni_salary()</span></span><br><span class="line"><span class="string">3、base_url可以精简，未完成</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTML</span><span class="params">(url)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36'</span></span><br><span class="line">        <span class="comment">#'Referer':'https://www.51job.com/'</span></span><br><span class="line">    &#125;</span><br><span class="line">    html = requests.get(url, headers=headers)</span><br><span class="line">    html.encoding = <span class="string">'gbk'</span></span><br><span class="line">    <span class="keyword">return</span> html.text</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uni_salary</span><span class="params">(salary_list)</span>:</span></span><br><span class="line">    _uni_salary = []</span><br><span class="line">    <span class="keyword">for</span> salary <span class="keyword">in</span> salary_list:</span><br><span class="line">        <span class="comment">#salary = salary.text</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(salary, str):</span><br><span class="line">            <span class="keyword">if</span> salary.endswith(<span class="string">"万/月"</span>):</span><br><span class="line">                a = salary[:<span class="number">-3</span>].split(<span class="string">'-'</span>)</span><br><span class="line">                b = str(ceil(float(a[<span class="number">0</span>]) * <span class="number">10</span>))</span><br><span class="line">                c = str(ceil(float(a[<span class="number">1</span>]) * <span class="number">10</span>))</span><br><span class="line">                _uni_salary.append(b + <span class="string">'~'</span> + c)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> salary.endswith(<span class="string">"万/年"</span>):</span><br><span class="line">                a = salary[:<span class="number">-3</span>].split(<span class="string">'-'</span>)</span><br><span class="line">                b = str(ceil(float(a[<span class="number">0</span>]) * <span class="number">10</span> / <span class="number">12</span>))</span><br><span class="line">                c = str(ceil(float(a[<span class="number">1</span>]) * <span class="number">10</span> / <span class="number">12</span>))</span><br><span class="line">                _uni_salary.append(b + <span class="string">'~'</span> + c)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 这里用‘~’代替‘-’否则用excel打开csv薪资一列时，部分数据会显示为日期</span></span><br><span class="line">            <span class="keyword">elif</span> salary.endswith(<span class="string">"千/月"</span>):</span><br><span class="line">                _uni_salary.append(salary[:<span class="number">-3</span>].replace(<span class="string">'-'</span>, <span class="string">'~'</span>))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'error'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            _uni_salary.append(<span class="string">"面谈"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> _uni_salary</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseHTML</span><span class="params">(html)</span>:</span></span><br><span class="line">    e = etree.HTML(html)</span><br><span class="line"></span><br><span class="line">    p = e.xpath(<span class="string">'//span/a[@target="_blank"]/@title'</span>)</span><br><span class="line">    position = p[::<span class="number">2</span>]</span><br><span class="line">    company = p[<span class="number">1</span>::<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    p_h = e.xpath(<span class="string">'//span/a[@target="_blank"]/@href'</span>)</span><br><span class="line">    position_href = p_h[::<span class="number">2</span>]</span><br><span class="line">    company_href = p_h[<span class="number">1</span>::<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    location = e.xpath(<span class="string">'//div[not(@class="el title")]/span[@class="t3"]/text()'</span>)</span><br><span class="line"></span><br><span class="line">    salary_list = e.xpath(<span class="string">'//div[not(@class="el title")]/span[@class="t4"]'</span>)</span><br><span class="line">    salary = uni_salary(salary_list)</span><br><span class="line"></span><br><span class="line">    p_time = e.xpath(<span class="string">'//div[not(@class="el title")]/span[@class="t5"]/text()'</span>)</span><br><span class="line"></span><br><span class="line">    data = pd.DataFrame(</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">'发布时间'</span>: p_time,</span><br><span class="line">            <span class="string">'职位'</span>: position,</span><br><span class="line">            <span class="string">'公司'</span>: company,</span><br><span class="line">            <span class="string">'地点'</span>: location,</span><br><span class="line">            <span class="string">'薪资（K/月）'</span>: salary,</span><br><span class="line">            <span class="string">'职位链接'</span>: position_href,</span><br><span class="line">            <span class="string">'公司链接'</span>: company_href,</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    start_time = time.time()</span><br><span class="line">    <span class="comment">#将要搜索的职位、地点输入到选框中，点击搜索，就可以在地址栏得到url</span></span><br><span class="line">    base_url = <span class="string">'https://search.51job.com/list/080200%252C080300%252C020000%252C070200,000000,4104%252C4103,08,9,99,%25E5%2588%25B6%25E5%2589%2582,2,&#123;&#125;.html?\</span></span><br><span class="line"><span class="string">lang=c&amp;stype=&amp;postchannel=0000&amp;workyear=99&amp;cotype=99&amp;degreefrom=99&amp;jobterm=99&amp;companysize=99&amp;providesalary=99&amp;lonlat=0%2C0&amp;radius=-1&amp;ord_field=0&amp;confirmdate=9&amp;fromType=&amp;dibiaoid=0&amp;address=&amp;line=&amp;specialarea=00&amp;from=&amp;welfare= '</span></span><br><span class="line">    <span class="comment">#处理前两页的内容</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">3</span>):</span><br><span class="line">        html = getHTML(base_url.format(i))</span><br><span class="line">        data = parseHTML(html)</span><br><span class="line">        data.to_csv(<span class="string">'最新招聘.csv'</span>, index=<span class="literal">False</span>, encoding=<span class="string">'utf-8-sig'</span>, mode=<span class="string">'a'</span>)</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">    end_time = time.time()</span><br><span class="line">    print(<span class="string">f"程序用时为：<span class="subst">&#123;end_time-start_time&#125;</span>s"</span>)<span class="comment">#大概用时6.7s</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>制剂工艺研究中小试的重要性</title>
    <url>/post/7ab4679b.html</url>
    <content><![CDATA[<p><strong>全文</strong><a href="http://www.360doc.com/content/16/1214/15/39075797_614644632.shtml" target="_blank" rel="noopener"><strong>转载</strong></a></p>
<center>孙亚洲老师谈制剂工艺研究中小试的重要性（全文）</center>

<p>看到你们对工艺研究，处方研究的观点，我谈一点个人的意见。有的网友说，小试研究水平都差不多，问题就出在这，不能都差不多，如果都差不多，那对将来的BE、大生产的一致性都没把握，最主要的问题要体现在小试的差异性，小试的研究水平越高，越体现出差异性，那向大生产工艺的过度成功率和BE的成功率就越高。</p>
<p>大家要在小试阶段开始，自始至终都要站在大生产的角度考虑问题，发现哪些是处方工艺研究过程中关键的参数和因素，这些参数不能只比终产品片剂或者胶囊，一定要在工艺过程中去控制。</p>
<a id="more"></a>

<p>举个例子，例如高速搅拌制粒机，小试的时候，大家要观察，物料量多大，及占搅拌机的容积比是多少，物料流动的状态是什么？是贴着锅壁转，还是像地球公转一样向一个方向转？还是既有自转又有公转？即物料是在转的过程中除向一个方向转之外，还要上下翻滚，这种混合状态是比较理想的，能够混匀。如果在这个状态下，小试通过其他如转速、时间等数据的验证，认为这个状态是比较理想的，那在其他不管多大的设备上，都要保持同样的物料混合状态。不能只看小试搅拌机转速多少，时间多长？在不同大小的设备上，转速一样，时间一样，但角速度不一样，造成混合力度不同，难以直接线性放大，故很能按照这样来直接放大。</p>
<p>另外，诸如此类问题，例如做制剂，做大输液也好，口服液也好，大生产是一大罐，加热时间，冷却时间，和实验室的小量样品加热和冷却时间完全不一样的。你模拟这个大生产所需要的时间进行加热过程和冷却过程的研究没有？如果你在小试没有考虑到这一点，你怎么保证你在生产上是可以的？很可能由于受热时间的较大差异，出现有关物质的显著变化。所以小试的时候，一定要把生产上可能会遇到的种种问题都考虑到，并设计实验进行考察，这样才有可能顺利地过渡到中试和大生产，如果小试的时候没有考虑到这些问题，只顾做自己的，那将来生产的时候不太可能顺利地放大。</p>
<p>还举高速搅拌的例子，大家做制剂的时候，不能做到制剂终端了，再去通过一些质量评价来证明其是否达到要求。我们在中间要搞清楚，影响制剂的关键的影响因素在哪里，例如做片剂，颗粒的性质一定是关键的影响因素。从小试开始，大家就要搞清楚，不同的处方，不同的辅料、不同原料药，每个药都不一样，都要搞清楚这个原料药和这个处方组成的特性，这个制剂，你的颗粒，做到什么样的范畴，是可以达到你的制剂的质量一致的，保证压出来的片子一致。摸处方的过程中始终要监控这些参数，为确定关键因素和参数积累数据。例如摸几个处方，这个处方中有乳糖、微晶纤维素、用PVP溶液做的颗粒，再加点儿崩解剂，就是一个常规的处方，这种处方，你要筛选乳糖和微晶纤维素的比例的时候，因为乳糖不太吸粘合剂，微晶纤维素吸粘合剂的量比较多，乳糖∶微晶纤维素是2∶1、1∶1或者1∶2的时候（经常看到这样设计比例，是不合理的；应该是乳糖量要高，按照3∶1、2∶1或者1.5∶1），粘合剂的量肯定是不一样的，你要抓住的关键点是做出的颗粒的性质是一样的，不能说不同的处方，全部都用同样的粘合剂量，那就不对了。设计的时候，最终要控制的是颗粒的性质，例如粒度分布、休止角、堆密度，你要保证这个一样，通过加不同量的粘合剂，达到这个效果一样，才能去比他的不同处方之间的性质、可压性。如果不同的比例，加粘合剂的量都一样，那一定是微晶纤维素量大的处方做的细粉量特别大，而乳糖量大的处方，因为粘合剂吸湿性差，做出的颗粒就会偏硬，性质就不一样，从而引起的压片时的差异性，难以确认原因，如何比压出来的片剂的质量？</p>
<p>从这些要找出他的关键点，从哪方面比，所以我建议大家，从小试研究开始，只要你做，你基本上把中间过程的参数都测出来，留出来，通过大量的参数的积累，你就能知道我做成什么样的可行，什么样的不行，当你把这些参数积累到相当丰富的时候，你就能做统计分析了，上中试的时候就能够很顺利地做下去。</p>
<p>因为哪个公司的领导都不会让你上中试、上生产线上一大批一大批找参数范围去，一定是在小试阶段，考虑清楚这个。我再讲个干燥的例子，固体制剂湿法制粒的干燥。我讲过很多遍，很现实，非常实在，大家还是需要这种东西。比如，湿法制粒，湿颗粒干燥的时候，小试阶段，在做之前就要知道生产线上是什么设备，是流化床沸腾干燥，还是烘箱？如果是烘箱，生产一批50-60度需要5、6个小时，甚至6、7个小时才能干，如果这个药是对热、特别是湿热不稳定的药物，是否要注意干燥过程中的稳定性呢？但是往往很多人不注意这个，就是在小试过程中不管那一套，用烘箱干燥，然后放大之后，时间一长，一批料做毁了，杂质出了问题。</p>
<p>那么有的人想的可能会多一点，生产上时间长，小试的时候把干燥时间延长，干燥时间延长到6个小时，甚至8个小时，一看没问题，杂质没有明显变化；结果一上生产，又完蛋了，因为什么？光想时间了，没考虑湿度。在实验室里面，一点点物料，可能20分钟，半小时，最长1小试就干了，生产上那么大量，要5、6小时，是逐步干燥的状态，和你实验室半小时烘干了，剩下5个半小时在干燥状态下烘的能一样吗？ 就好像沙漠里面，没有水分，尸体都不腐烂，形成干尸，为什么？没有水。干燥状态下的变化，和潮湿状态下的变化，是不一样的，所以你要想到这一点，有意识地模拟这种生产上长时间处于的湿热状态，你可以模拟极端的，也可以和生产相近的。 什么是极端的，你可以把颗粒封闭到干燥瓶里去，一瓶一瓶盖上，放在烘箱里，水分出不来，比实际生产状态更严重的湿热，设计在不同时间时打开盖子干燥后测定，比生产的状态更加极端。</p>
<p>你这种状态下，如果8个小时，6个小时出问题了，有些变化但不是很大，你可以进一步地，用封口膜罩上称量瓶，扎几个小眼儿，有一定的通透性，或者同时做两种状态，一个是极端潮湿的状态，一个是模拟生产的逐步干燥的状态，如果都没问题，生产上肯定没问题，如果有问题，60度不行，降温到50度，如果还不行，那箱式干燥可能就不能用了，是不是考虑流化床制粒？如果说没有流化床？是不是考虑适当浓度的乙醇？30-40%浓度不要太高，高浓度需要防爆的问题，可以加快挥发速度，减少干燥的时间，但是使用乙醇也可能带来其他的问题，如果是难溶药物，会不会溶解药物，带来晶型的转化等等。这些问题都要考虑。如果说什么都不行，只能考虑换设备，考虑用流化床沸腾干燥，流化床1个小时之内肯定能干，但是流化床又带来其他的问题，颗粒互相之间撞击力度比较大，会带来细粉量的增加，怎么在工艺上解决细粉的问题？是不是把粘合剂加多一点？把颗粒做的结实点？通过其他的方式？要根据现实的情况去考虑。总之一句话，大家在小试的时候，一定要站在生产的角度要看问题，做小试要用生产的眼光去指导小试，和你生产的设备的状态去整体设计。</p>
<p>没有一个药是一样的，我一直不太赞成建立研究平台的说法，大家研究多了会发现，一个药物一个样，哪怕最简单的一个药，例如一个药物的甲基，me too一个药，变成乙基，疗效就不一样了，疗效的都不一样的，你能保证生产上的性质就一样吗？你完全一个处方，一个工艺就能套用吗？也不见得。所以说，每个药物制剂都有各自的特点，要从3个方面，一个是原料药的性质，原料药的性质应该是全方面的，不仅仅是理化性质，也包括体内的药代动力学的性质，各个方面，全方面考虑。 原料药、辅料、设备，三者一定要结合在一块儿，通盘考虑，任何一个事情发生变化都是相互影响的，不能说这个地方变了，其他的地方没有影响，这不太可能。只要变化了，就有影响， 想办法把这个影响降到最低，怎么消除这个影响，怎么控制这个影响，这个问题是大家在做的过程中要去思考、解决的问题。</p>
<p>比如说我见到的一个处方，忘了是哪个药了，好像也属于是一致性评价的品种。是个BCS1类的高水溶性高渗透性的药物，规格10毫克，处方组成是乳糖、预胶化淀粉（水为润湿剂制软材），加点崩解剂、硬脂酸镁。这个原研药做的是溶散型的不是快速崩解型的，大家首先就要想到：对与一个BCS1类的，他为什么要做成缓慢溶散型而不是快速崩解的？这就是所谓有的时候谢老师还有其他好多人说过的一样“原研差你要做的跟它一样差”，因为这种片剂看起来质量很差，差什么呢？不同的点，因为它不是快速崩解型的，溶出的时候片剂颗粒要慢慢地脱落溶散，所以片之间的误差，RSD特别大，甚至到了15分钟，20分钟还有百分之十几甚至百分之二十多。实际上这种品种经常看到大家做的片子，快速崩解，两三分钟就崩解了，特别匀，5分钟就全溶出了，什么溶剂都全溶出了，片子间又特别匀。就说参比制剂的不好，但我觉得是大家领会错了谢老师等人的意思。</p>
<p>奉劝大家，碰到这种情况要想一想，他们为什么要做成这样？国外对于这样高溶解性的，快吸收性的，做成这样一般都是有原因的，是不是临床作用效果上不能太快了？比如对于降血压药，降血糖药，如果溶出太快了，血药浓度快速升高，作用效果过于剧烈，是不是会降压、降糖太厉害，而带来安全性方面的问题？有的药物胃刺激性比较大，溶出太快造成局部药物浓度过高，对胃的刺激太大。所以要想清楚其原因，为什么要做成这样！对于这种处方，他们有的人找我，说我怎么做都溶出得特别快，无法做到跟参比一样的溶出状态和结果。从参比制剂处方来分析，他出现这种慢速的溶散状态，处方组成不可能是崩解剂和乳糖能够实现的，问题应该就在预胶化淀粉上。预胶化淀粉有完全预胶化淀粉和部分预胶化淀粉两种。完全预胶化淀粉的粘性比较大，形成凝胶化，是个不崩解的。而部分预胶化淀粉既有粘性同时也具有崩解作用，国外的预胶化淀粉糊化的程度控制的较好，性质比较均一；而国内的会比较宽质量会差一些。那么有没有可能参比用的是完全预胶化淀粉和部分预胶化淀粉配合用的？或有可能采用的部分预胶化淀粉就可以有这种溶出特性？原研药的专利处方中硬脂酸镁的用量达到2.5%，远高于通常的使用量，是否是采用加入过量的硬脂酸镁大幅提高疏水性而导致片剂溶散缓慢！着眼点在哪里？就是根据它的临床作用的需求，从处方的组成合理去分析各个辅料特点，找到起关键作用的辅料。（补充：实测原研药的硬脂酸镁约为1.5%）</p>
<p>你要不把这个东西去分解去搞清楚，光一头扎进溶出杯里你怎么做都是失败。溶出一定离不开制剂，要以制剂为龙头好好的分析清楚分析透。比如说我公司开发的降血糖药物利格列汀片，这个制剂 5毫克的规格，原料药在250毫升各种pH溶剂中均可溶解，属于高溶解性药物，故溶出度的问题不大。它的处方组成是：甘露醇、预胶化淀粉（玉米）、玉米淀粉、共聚乙烯吡咯烷酮、硬脂酸镁，处方也很简单，他同样也不是一个快速崩解型的，为缓慢溶散型的。这个药的处方前研究看了原料药的显微状态，测定了堆密度、粒度分布、休止角等。结果显微镜下看是球型的颗粒，那流动性应该特别好，但是休止角特别差根本就测不出来，在漏斗里就流不下去！为什么？是因为其原料药非常细，其粒径分布D90在8个微米以下，从而造成流动性极差，堆密度也只有0.28左右，非常蓬松。</p>
<p>故不能单纯考虑球型粉末流动就一定好，需要综合考虑。因他的粒度太低了D90就8um，属于微粉化的范畴，决定了他的流动性很差，堆密度也只有0.2几，粉性特别差，因此需要的粘合剂的粘度就要高。</p>
<p>从处方组成来看，为什么用甘露醇？甘露醇流动性并不好，应该说如果采用乳糖可以更好地改善他的流动性。做项目研究人员问我为什么不用乳糖，因为这个药是个杂氮环的化合物含有伯氨基不能与乳糖配伍，原因是什么是因为乳糖里有含醛基的半乳糖杂质，会和伯氨反应出现杂质、颜色变黄。好多人对原辅料相容性不理解，以为是考察辅料与原料药之间的作用，实际上绝大部分不是辅料本身，而是辅料中带有的杂质影响到制剂的质量。</p>
<p>所以这个品种就不能用乳糖做稀释剂，而采用同样为水溶性辅料但流动性明显不如乳糖的甘露醇，另使用预胶化淀粉调节流动性。因此要想到是不是做的过程中应该要把原辅料的堆密度、流动性等测出来指导混合工艺。是把原料药与流动性好的辅料先混合，再与别的辅料混合，还是一起混合？生产上最好不要依次加辅料进行混合，因为无法在一个混合设备上实现操作，咋做呀？因此设计试验进行研究：将原料药分别与适量的稀释剂进行混合，以及与全部的稀释剂一起混合，测定各个粉末样品的基本物理性质，并用显微境（很可能倍数不够看不出来）或电镜扫描去看混合在一起的粉末状态。我猜的甘露醇结构可能是较为光滑，预胶化淀粉有可能为多孔性的、吸附性比较强的粉末，会把微小的8微米的原料药吸附在其周围，作为一个中间的载体而使药物的均匀性提高！</p>
<p>不能只停留在混合完了均匀性测定合格就完事了，要深层次的了解他的本质！比如说我拿电镜扫描去看药物细粉都跟谁在一块，是吸附在甘露醇上呀还是吸附在预胶化淀粉上呀！那如果说我们证实吸附在预胶化淀粉上，那么通过预胶化的形态是否能解释的通。这样我们是不是通过几个案例很快就能搞清楚了各种辅料的性质。只有各方面都深层次理解了他的本质，才能真正的把一个项目去做好，不是光停留在看表面现象，一天到晚无数次做溶出度。甚至很多人从小试开始就在作无数的溶出曲线对比。不同的设备放大都不一样，采用小试样品做无数溶出曲线对比有什么意义啊？</p>
<p>所以在小试阶段做溶出是要做不是不要做，一定要做！但不是做4条或更多条曲线的对比，小试上最重要是找出有区分力的条件，拿这个有区分力的条件进行处方工艺的筛选基本就够了，你做到一定的批量处方工艺基本确定时再去详细对比。特别是你到了大生产样品出来了，才是最重要，那才是真正要去全面的比。我现在碰到的大多恰恰相反了，无数次的扣小试样品的溶出度曲线，到真正放大了反而不管了，做溶出就按照标准取一个点就完事了，这不是本末倒置吗！因为看的就是最终的大生产这个样品是不是跟原研的一致性。</p>
]]></content>
      <categories>
        <category>制剂</category>
      </categories>
      <tags>
        <tag>制剂</tag>
      </tags>
  </entry>
  <entry>
    <title>固体口服制剂开发路径：工艺篇</title>
    <url>/post/70339cd4.html</url>
    <content><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>全文为<a href="http://www.360doc.com/content/18/0401/16/45217307_742044164.shtml" target="_blank" rel="noopener"><strong>转载</strong></a></p>
<p>新药自己开发应根据不同阶段选择合适的工艺，即“目的性”。如在开发临床早期的制剂，应采用简单的工艺，便于新药能够快速进行临床概念性验证；当处于临床后期及商业生产的制剂，应充分考虑工艺的稳定性、可放大性等因素。固体口服制剂的主要单元操作包括制粒、干燥、粉碎、混合、压片（或罐装）等；其中根据制剂工艺，固体口服片剂常见三大工艺：湿法制粒、干法制粒和粉末直压工艺。下文将对新药固体口服制剂的常见工艺研究进行介绍。</p>
<a id="more"></a>

<table>
<thead>
<tr>
<th align="center">湿法制粒</th>
<th align="center">干法制粒</th>
<th align="center">粉末直压</th>
</tr>
</thead>
<tbody><tr>
<td align="center">混合</td>
<td align="center">混合</td>
<td align="center">混合</td>
</tr>
<tr>
<td align="center">制粒（湿法）</td>
<td align="center">制粒（干法）</td>
<td align="center">/</td>
</tr>
<tr>
<td align="center">干燥</td>
<td align="center">/</td>
<td align="center">/</td>
</tr>
<tr>
<td align="center">粉碎</td>
<td align="center">粉碎</td>
<td align="center">/</td>
</tr>
<tr>
<td align="center">混合</td>
<td align="center">混合</td>
<td align="center">/</td>
</tr>
<tr>
<td align="center">压片</td>
<td align="center">压片</td>
<td align="center">压片</td>
</tr>
</tbody></table>
<h2 id="制粒工艺"><a href="#制粒工艺" class="headerlink" title="制粒工艺"></a>制粒工艺</h2><p>制粒主要目的是使原辅料粉末通过粘附形成较大颗粒（通常0.05-1.0mm)，通过改善颗粒的粒径分布（PSD）、流动性、混合均一性等，便于后续罐装或压片过程。目前已有制粒技术如下图所示，其中最常用的制粒技术：干法制粒（碾压）和湿法制粒（高剪切制粒或流化床制粒）。</p>
<table>
<thead>
<tr>
<th align="center">项目</th>
<th align="center">干法制粒</th>
<th align="center">湿法制粒（高剪切）</th>
<th align="center">湿法制粒（流化床）</th>
</tr>
</thead>
<tbody><tr>
<td align="center">机理</td>
<td align="center">通过滚压力将物料压成条状物，然后通过粉碎机将粉碎成小颗粒</td>
<td align="center">通过向高速转动的物料中加入合适液体粘合剂，将物料沾粘成小湿颗粒，然后干燥</td>
<td align="center">向处于硫化状态的物料中喷洒粘合剂，将物料沾粘成小湿颗粒，一边制粒一边干燥</td>
</tr>
<tr>
<td align="center">关键工艺参数</td>
<td align="center">1.预混合均一性<br />2.条状物厚度<br />3.颗粒粒径分布及流动性</td>
<td align="center">1.制粒终点的建立<br />2.含水量<br />3.颗粒粒径分布及流动性</td>
<td align="center">1.制粒终点的建立<br />2.含水量<br />3.颗粒粒径分布及流动性</td>
</tr>
<tr>
<td align="center">优势</td>
<td align="center">1.不引入湿热<br />2.可连续化生产</td>
<td align="center">1.易放大<br />2.可在锅内完成预混合</td>
<td align="center">1.制粒干燥同步进行<br />2.颗粒均匀、流动性好、密度低</td>
</tr>
<tr>
<td align="center">缺陷</td>
<td align="center">若原料药可压性差，可能导致粘附在滚筒上</td>
<td align="center">过程引入湿热</td>
<td align="center">同时引入湿热</td>
</tr>
</tbody></table>
<h3 id="高剪切湿法制粒"><a href="#高剪切湿法制粒" class="headerlink" title="高剪切湿法制粒"></a>高剪切湿法制粒</h3><p>高剪切制粒是目前制粒工艺中最常用的方法，与其他制粒技术相比，其工艺易于放大，颗粒易混合均一。为便于粒径生长，高剪切湿法制粒的载药量≤50%。高剪切湿法制粒机一般由锅体、喷嘴、搅拌桨和辅助切碎刀组成，依次完成物料预混合、加液制粒和补充制粒的过程。高剪切湿法制粒的许多工艺参数（如批量、粘合剂加入量、搅拌桨转速、制粒时间等）均会影响制得颗粒的质量。</p>
<table>
<thead>
<tr>
<th align="center">工艺参数</th>
<th align="center">建议</th>
</tr>
</thead>
<tbody><tr>
<td align="center">批量</td>
<td align="center">物料体积一般为锅体体积的30%-70%；<br />经验规则：高剪切湿法制粒锅最大批量=锅体积（L）/5，如6L的锅，一般最大批量为1.2kg物料</td>
</tr>
<tr>
<td align="center">液体加入量</td>
<td align="center">一般干物料的IMC（initial moisture content)为1-5%，湿颗粒的TMC（target moisture content）为20-30%，而高剪切湿法制粒处于密闭体系，水分损失很少，故总液体加入量=Batch Size × （TMC - IMC）/ 100</td>
</tr>
<tr>
<td align="center">加液速度</td>
<td align="center">雾化压力一定时，不同喷液速度影响雾滴大小，导致颗粒的PSD差异和物料的外观、密度；喷液时间过长，容易导致物料温度加速升温，易导致化学稳定性</td>
</tr>
<tr>
<td align="center">搅拌桨、切碎刀转速</td>
<td align="center">转速太慢，不能有效混合和制粒；转速太快，导致颗粒磨损，变小</td>
</tr>
</tbody></table>
<h3 id="流化床制粒"><a href="#流化床制粒" class="headerlink" title="流化床制粒"></a>流化床制粒</h3><p>流化床制粒是通过粘合剂溶液喷洒到流化床粉末上生产颗粒的一种方法，其由物料混合、湿法制粒和干燥步骤组成。流化床中颗粒的运动轨迹、粘合剂的加入量和空气干燥能力对流化制粒影响较大。例如，较高的入口温度产生较细的颗粒，较低的温度产生较大较强的颗粒。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>影响</th>
</tr>
</thead>
<tbody><tr>
<td>进气温度</td>
<td>空气加热能力：<br />太大：物料干燥太快；<br />太小：流化床物料湿度越来越大，最终塌床</td>
</tr>
<tr>
<td>粘合剂浓度</td>
<td>粘合剂喷射时的粘度：<br />太大：不容易喷射粘合剂<br />太小：不能有显著的粘性帮助形成颗粒</td>
</tr>
<tr>
<td>雾化压力</td>
<td>液滴大小：<br />太大：物料易形成大颗粒<br />太小：快速干燥，不易形成大颗粒</td>
</tr>
<tr>
<td>喷液速度</td>
<td>物料冷却能力：<br />太大：流化床物料湿度越来越大，最终塌床<br />太小：容易形成大量细粉</td>
</tr>
</tbody></table>
<p>流化床制粒过程中，可以通过记录产品和排气温度、颗粒含水量等来监控工艺过程。</p>
<h3 id="干法制粒"><a href="#干法制粒" class="headerlink" title="干法制粒"></a>干法制粒</h3><p>干法制粒工艺过程中，混合均匀后的物料粉末在高压下压实、打碎、过筛后，形成一定粒径分布的颗粒。较湿法制粒，干法制粒的优势是工艺过程中不涉及水分和热量，适合湿热敏感物料制粒。同时，干法制粒占用空间较小，适合连续化生产。干法制粒不适用于可压性或二次可压性较差的物料；同时由于高压制粒，颗粒密度较高，可能减缓产品的溶出。</p>
<h3 id="粉末直压"><a href="#粉末直压" class="headerlink" title="粉末直压"></a>粉末直压</h3><p>直接选用流动性、可压性较好辅料进行压片；载药量较宽，可以70-80%载药量，甚至更高；粉末直压适合湿热敏感药物</p>
<h2 id="烘干工艺"><a href="#烘干工艺" class="headerlink" title="烘干工艺"></a>烘干工艺</h2><p>烘干工艺一般是湿法制粒（高剪切或流化床）后的必要步骤，常见干燥方式有鼓风烘箱真空烘箱和流化床。其中流化床干燥工业应用较多，其通过热的进风空气将湿颗粒分散、流化，湿颗粒悬浮在流化空气中，热空气和湿颗粒之间的接触面积显著增大，能在较短时间内实现干燥物料的目的。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>建议</th>
</tr>
</thead>
<tbody><tr>
<td>进风量</td>
<td>进风量太小，物料流化不起来；进风量太大，物料过度磨损，细粉较多，API可能被空气吹散夹带排除，导致物料API含量降低；</td>
</tr>
<tr>
<td>进风温度</td>
<td>一般推荐60-70℃；在固定温湿度空气干燥下，物料水分最终将达到平衡含水量（equilibrium moisture content, EMC)；温度越高（或湿度越低），干燥空气的蒸气容量越大，物料越容易干燥。但温度太高，容易造成API化学性质不稳定；温度太低，又会延长干燥时间，对生产效率和产品稳定性均不利</td>
</tr>
</tbody></table>
<h2 id="粉碎工艺"><a href="#粉碎工艺" class="headerlink" title="粉碎工艺"></a>粉碎工艺</h2><p>干颗粒的混合工艺是保证最终药品含量均一性的关键步骤，混合机混合机制通常包括：对流、扩散、剪切。</p>
<p>混合前通常将助流剂、润滑剂或外部崩解剂加入粉碎好的干颗粒中，最常见的干颗粒混合机为翻滚式混合机，影响其混合效率的关键参数包括：物料批量、混合圈数（混合时间和速度）、加料顺序。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>建议</th>
</tr>
</thead>
<tbody><tr>
<td>物料批量</td>
<td>1.最佳为混合机容量的40-70%<br />过低（＜20%），混合物会过度混合，导致混合均一性较差<br />过高（＞80%），混合效率降低，需要较长的混合时间弥补较高的填充水平，生产效率低</td>
</tr>
<tr>
<td>混合圈数</td>
<td>混合圈数是物料混合均一性的关键参数，其由混合时间和混合速度决定。<br />混合时间过短，物料容易混合不均；混合时间过长，不同种类粒径的物料可能分层，恶化混合均一性，还容易导致润滑剂的过度润滑。<br />混合速度一般为10-25rpm。在有润滑剂的情况下，一般混合时间取可接受范围的下限，避免过度润滑导致硬度、溶出等降低</td>
</tr>
<tr>
<td>加料顺序</td>
<td>混合过程通过物料从高浓度扩散到低浓度区达到混合均一性。<br />对于需要外加的崩解剂、助流剂、润滑剂，一般用量较少；为了更快更好的达到混合均一，常采用等比例稀释或部分预混合，其中预混合的混合效率较等比例稀释法高</td>
</tr>
<tr>
<td>物料密度、粒径、形状</td>
<td>尽量选择粒径较为接近的物料；可以通过粉碎或碾磨的方法降低粒径和改善粒径分布，能够增加物料颗粒的数目，避免由于大颗粒或力度分布不均一导致的产品均一性问题；<br />球形颗粒流动性好，前期容易混合均匀，但后期也容易过度混合；针状等颗粒前期较难混合均匀，但后期也不易混合分层；<br />不同物料密度应尽量接近，物料密度相差太大（≥4倍）容易导致混合分层；密度差异、粒径、性质共同作用，会加速恶化混合均一性问题。</td>
</tr>
</tbody></table>
<p><img data-src="C:/Users/wanga/Desktop/%E5%88%B6%E5%89%82%E5%AD%A6%E4%B9%A0/md%E5%9B%BE%E7%89%87/Snipaste_2020-07-15_21-21-24.jpg" alt="Snipaste_2020-07-15_21-21-24"></p>
<center>混合料筒不同装载量对混合效率的影响</center>

<p><img data-src="C:/Users/wanga/Desktop/%E5%88%B6%E5%89%82%E5%AD%A6%E4%B9%A0/md%E5%9B%BE%E7%89%87/Snipaste_2020-07-15_21-30-36.jpg" alt="Snipaste_2020-07-15_21-30-36"></p>
<center>混合的工艺过程</center>

<h2 id="压片工艺"><a href="#压片工艺" class="headerlink" title="压片工艺"></a>压片工艺</h2><p>压片工艺是将混合好的物料通过压片机成型的过程，其是临床给药的一种最终形式。压片过程：物料填充摸具、调整填充重量、压实物料成片状、片剂从模具中分离。压片工艺的关键参数包括：主压力和转速。评价标准常为硬度和脆碎度。</p>
<table>
<thead>
<tr>
<th>因素</th>
<th>建议</th>
</tr>
</thead>
<tbody><tr>
<td>结晶态/多态性</td>
<td>1.辅料结晶度越低，可压性越好，但脆碎度会变差；<br />2.部分API在会高压缩作用下，容易转晶，可能导致溶出变慢</td>
</tr>
<tr>
<td>孔隙率和堆密度</td>
<td>1.物料孔隙率越高，可压性越好；<br />2.一般干法制粒制得的颗粒堆密度较大，二次可压性可能存在部分问题</td>
</tr>
<tr>
<td>粒径和形状</td>
<td>1.较球形颗粒，不规则颗粒可压性更好；<br />2.可压性与粒径大小成正比</td>
</tr>
<tr>
<td>压缩力</td>
<td>1.一般压缩力增加，片剂硬度增加，脆碎度降低；但压缩力太高，可能对溶出产生不利影响，并可能导致片剂内部出现裂纹，造成片剂不合格。<br />2.对于圆形片，片剂硬度数值一般为片径10倍即可</td>
</tr>
<tr>
<td>压片速度</td>
<td>1.过高旋转速度，物料填充时间减少，容易出现片重差异和含量均一性问题；另外，过快的转速，压片时间缩短，空气容易滞留在片中，导致片剂顶裂等；<br />2.转速过慢，物料长时间处于压片机震动环境，容易导致物料分层，出现片重差异和含量均一性问题；<br />3.压片速度对塑性辅料（MCC）的影响较脆性辅料（乳糖）大，转速越快，塑性辅料压制的片剂硬度越低；<br />4.合适的压片速度兼顾片剂的硬度、脆碎等</td>
</tr>
<tr>
<td>物料含水量</td>
<td>1.物料含水量过低，压缩过程中颗粒容易破碎产生更多的细粉，导致较差可压性和较高的脆碎度；<br />2.物料含水量过高，物料流动性和可加工性（如粘冲等）均可能存在问题</td>
</tr>
</tbody></table>
<p><img data-src="C:/Users/wanga/Desktop/%E5%88%B6%E5%89%82%E5%AD%A6%E4%B9%A0/md%E5%9B%BE%E7%89%87/Snipaste_2020-07-15_21-51-04.jpg" alt=""></p>
<center>固体口服制剂中涉及物料的相对密度情况</center>

<table>
<thead>
<tr>
<th>缺陷类型</th>
<th>建议</th>
</tr>
</thead>
<tbody><tr>
<td>裂片（顶裂、腰裂）</td>
<td>降低压片压力，减少片剂回弹裂片；<br />适当增加粘合剂用量，提高颗粒拉紧实度；<br />适当增加润滑剂用量，减少摩擦</td>
</tr>
<tr>
<td>松片</td>
<td>增加粘合剂用量，提高颗粒的紧实度；<br />适度提高干颗粒含水量（1-3%），干颗粒含水量太低（＜1%）不易成片；<br />适当增加压片压力</td>
</tr>
<tr>
<td>粘冲</td>
<td>适当降低干颗粒含水量；<br />提高模具表面光洁度；<br />增加润滑剂；<br />部分原辅料熔点受压力影响而降低、粘冲，可适度降低压片力</td>
</tr>
</tbody></table>
<h2 id="制剂工艺的选择"><a href="#制剂工艺的选择" class="headerlink" title="制剂工艺的选择"></a>制剂工艺的选择</h2><p>制粒过程的选取取决于粉末混合的容易程度，即粉末流动性和混合均匀性。</p>
<h2 id="制剂工艺的开发目标"><a href="#制剂工艺的开发目标" class="headerlink" title="制剂工艺的开发目标"></a>制剂工艺的开发目标</h2><p>根据产品TPP，需要对制剂工艺制定开发目标，以便达到TPP的要求。以典型的湿法制粒为例：</p>
<table>
<thead>
<tr>
<th align="center">单元操作</th>
<th align="center">开发目标</th>
<th align="center">控制目标</th>
<th align="center">物料检测</th>
</tr>
</thead>
<tbody><tr>
<td align="center">制粒</td>
<td align="center">制备合适大小的颗粒</td>
<td align="center">API晶型不能受到影响</td>
<td align="center">XRD、水分</td>
</tr>
<tr>
<td align="center">粉碎</td>
<td align="center">降低颗粒粒径，改善粒径分布</td>
<td align="center">避免物料过热</td>
<td align="center">PSD、松实密度</td>
</tr>
<tr>
<td align="center">混合</td>
<td align="center">物料混合均一性</td>
<td align="center">需要避免过度润滑</td>
<td align="center">PSD、松实密度、混合均一性、含量、流动性</td>
</tr>
<tr>
<td align="center">胶囊罐装</td>
<td align="center">填充为重量均一的胶囊</td>
<td align="center">避免物料损失过大</td>
<td align="center">重量差异、崩解、溶出、含量、含量均一性</td>
</tr>
<tr>
<td align="center">压片</td>
<td align="center">制备合格的片剂</td>
<td align="center">最小化压片出现的缺陷</td>
<td align="center">重量差异、崩解、溶出、含量、含量均一性、硬度、脆碎度</td>
</tr>
<tr>
<td align="center">包衣</td>
<td align="center">均匀包衣</td>
<td align="center">控制包衣出现的外观问题</td>
<td align="center">外观、溶出</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h2 id="新药制剂开发决策"><a href="#新药制剂开发决策" class="headerlink" title="新药制剂开发决策"></a>新药制剂开发决策</h2><p>新药制剂的开发具有其特殊性，新化合物第一次开发成制剂，其很多性质还不甚了解，为了更有效率进行制剂开发，需要遵循一些基本原则和管理工具，如TPP等。在综合考虑了制剂处方工艺开发的基本原则，下表给出新药制剂开发的决策流程图：</p>
<p><img data-src="C:/Users/wanga/Desktop/%E5%88%B6%E5%89%82%E5%AD%A6%E4%B9%A0/md%E5%9B%BE%E7%89%87/Snipaste_2020-07-15_22-16-29.jpg" alt=""></p>
]]></content>
      <categories>
        <category>制剂</category>
      </categories>
      <tags>
        <tag>制剂</tag>
      </tags>
  </entry>
  <entry>
    <title>溶出曲线作图</title>
    <url>/post/b0bd4517.html</url>
    <content><![CDATA[<p>方便快速制作溶出曲线，适用速释制剂。</p>
<a id="more"></a>

<h3 id="Version-1-0"><a href="#Version-1-0" class="headerlink" title="Version 1.0"></a>Version 1.0</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'SimHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">fig_title = <span class="string">'*************'</span><span class="comment">#自定义图的标题</span></span><br><span class="line">line_width = <span class="number">1.5</span><span class="comment">#自定义折线宽度</span></span><br><span class="line">colors = [<span class="string">'blue'</span>, <span class="string">'red'</span>, <span class="string">'green'</span>]<span class="comment">#选择折线颜色</span></span><br><span class="line">labels = [<span class="string">'0.1mol/L盐酸溶液'</span>, <span class="string">'pH4.5醋酸盐缓冲液'</span>, <span class="string">'pH6.8磷酸盐缓冲液'</span>]<span class="comment">#折线的标签，与图例对应</span></span><br><span class="line">markers = [<span class="string">'o'</span>, <span class="string">'^'</span>, <span class="string">'s'</span>]<span class="comment">#区分折线</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">5</span>), dpi=<span class="number">120</span>)<span class="comment">#改变图像的长宽和dpi</span></span><br><span class="line">plt.title(fig_title, size=<span class="number">16</span>)<span class="comment">#size可调，下同</span></span><br><span class="line">plt.xlabel(<span class="string">'时间(min)'</span>, size=<span class="number">14</span>)</span><br><span class="line">plt.ylabel(<span class="string">'累积溶出百分率(%)'</span>, size=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#x轴</span></span><br><span class="line">x = [<span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">60</span>]</span><br><span class="line"><span class="comment">#0.1mol/L盐酸溶液的溶出数据</span></span><br><span class="line">y1 = [<span class="number">0</span>, <span class="number">49</span>, <span class="number">87</span>, <span class="number">92</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>]</span><br><span class="line"><span class="comment">#pH4.5醋酸盐缓冲液的溶出数据</span></span><br><span class="line">y2 = [<span class="number">0</span>, <span class="number">55</span>, <span class="number">84</span>, <span class="number">91</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>]</span><br><span class="line"><span class="comment">#pH6.8磷酸盐缓冲液的溶出数据</span></span><br><span class="line">y3 = [<span class="number">0</span>, <span class="number">42</span>, <span class="number">79</span>, <span class="number">88</span>, <span class="number">91</span>, <span class="number">93</span>, <span class="number">95</span>]</span><br><span class="line">y = [y1, y2, y3]</span><br><span class="line"></span><br><span class="line"><span class="comment">#给5min和10min的点标记溶出量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">note</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    txt = [str(each) <span class="keyword">for</span> each <span class="keyword">in</span> y]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(x)):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">1</span> <span class="keyword">or</span> i == <span class="number">2</span>:</span><br><span class="line">            plt.annotate(txt[i], xy=(x[i], y[i]), xytext=(x[i] + <span class="number">2</span>, y[i] - <span class="number">3.2</span> * i))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#可选，在y=85的位置画出一条点线</span></span><br><span class="line"><span class="comment">#plt.plot(x, [85] * 7, linewidth=1.0, linestyle='-.', color='orange')</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(y)):</span><br><span class="line">    plt.plot(x, y[i], color=colors[i], linewidth=line_width, label=labels[i])</span><br><span class="line">    plt.scatter(x, y[i], color=colors[i], linewidth=line_width, marker=markers[i])</span><br><span class="line">    note(x, y[i])</span><br><span class="line"><span class="comment">#y轴刻度，增加85，方便观察15min时的溶出量是否超过85%</span></span><br><span class="line">plt.yticks([<span class="number">0</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">100</span>])</span><br><span class="line"><span class="comment">#plt.xticks(x)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#网格透明度为0.5，可调范围0~1</span></span><br><span class="line">plt.grid(alpha=<span class="number">0.5</span>, linestyle=<span class="string">'--'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示图例</span></span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line"><span class="comment">#展示作图，方便再次调整保存</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<h3 id="Version-2-0"><a href="#Version-2-0" class="headerlink" title="Version 2.0"></a>Version 2.0</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">======================================================</span></span><br><span class="line"><span class="string">2020-07-21</span></span><br><span class="line"><span class="string">1、将汇总图拆分成四个子图，前三个分别与参比进行对比，最后一个汇总</span></span><br><span class="line"><span class="string">2、标记子图数据</span></span><br><span class="line"><span class="string">======================================================</span></span><br><span class="line"><span class="string">后续计划</span></span><br><span class="line"><span class="string">1、在子图空白处内嵌表格</span></span><br><span class="line"><span class="string">2、模块化重新整理代码</span></span><br><span class="line"><span class="string">======================================================</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'SimHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">batch_NO = <span class="string">'***'</span><span class="comment">#设置批号</span></span><br><span class="line">x = [<span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">60</span>]</span><br><span class="line"><span class="comment">#参比数据，此处随机</span></span><br><span class="line">y_refer = [[<span class="number">0</span>, <span class="number">30</span>, <span class="number">70</span>, <span class="number">90</span>, <span class="number">96</span>, <span class="number">18</span>, <span class="number">100</span>],</span><br><span class="line">           [<span class="number">0</span>, <span class="number">30</span>, <span class="number">70</span>, <span class="number">90</span>, <span class="number">96</span>, <span class="number">98</span>, <span class="number">100</span>],</span><br><span class="line">           [<span class="number">0</span>, <span class="number">30</span>, <span class="number">70</span>, <span class="number">90</span>, <span class="number">96</span>, <span class="number">98</span>, <span class="number">100</span>]]</span><br><span class="line"><span class="comment"># 0.1mol/L盐酸溶液的溶出数据</span></span><br><span class="line">y1 = [<span class="number">0</span>, <span class="number">49</span>, <span class="number">87</span>, <span class="number">92</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>]</span><br><span class="line"><span class="comment"># pH4.5醋酸盐缓冲液的溶出数据</span></span><br><span class="line">y2 = [<span class="number">0</span>, <span class="number">55</span>, <span class="number">84</span>, <span class="number">91</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>]</span><br><span class="line"><span class="comment">#pH6.8磷酸盐缓冲液的溶出数据</span></span><br><span class="line">y3 = [<span class="number">0</span>, <span class="number">42</span>, <span class="number">79</span>, <span class="number">88</span>, <span class="number">91</span>, <span class="number">93</span>, <span class="number">95</span>]</span><br><span class="line">y = [y1, y2, y3]</span><br><span class="line">colors = [<span class="string">'g'</span>, <span class="string">'r'</span>, <span class="string">'b'</span>]</span><br><span class="line">labels = [<span class="string">'0.1mol/L盐酸溶液'</span>, <span class="string">'pH4.5醋酸盐缓冲液'</span>, <span class="string">'pH6.8磷酸盐缓冲液'</span>, batch_NO + <span class="string">'批溶出汇总'</span>]</span><br><span class="line">types = [<span class="string">'go-'</span>, <span class="string">'r^-'</span>, <span class="string">'bs-'</span>, <span class="string">'c*-'</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_plot</span><span class="params">(ax)</span>:</span></span><br><span class="line">    ax.set_xlabel(<span class="string">'时间(min)'</span>, fontsize=<span class="number">12</span>)</span><br><span class="line">    ax.set_ylabel(<span class="string">'累计溶出百分率(%)'</span>, fontsize=<span class="number">12</span>)</span><br><span class="line">    ax.grid(alpha=<span class="number">0.5</span>, linestyle=<span class="string">'--'</span>)</span><br><span class="line">    ax.axis([<span class="number">0</span>, <span class="number">62</span>, <span class="number">0</span>, <span class="number">105</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">custome_fig</span><span class="params">()</span>:</span></span><br><span class="line">    fig.suptitle(batch_NO + <span class="string">'批溶出曲线汇总（n=？)'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">note</span><span class="params">(axss, x, y)</span>:</span></span><br><span class="line">    txt = [str(each) <span class="keyword">for</span> each <span class="keyword">in</span> y]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(x)):</span><br><span class="line">        axss.annotate(txt[i], xy=(x[i], y[i]), xytext=(x[i] - <span class="number">3.5</span>, y[i] - <span class="number">10</span>), \</span><br><span class="line">                      arrowprops =dict(arrowstyle=<span class="string">'-&gt;'</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">note_refer</span><span class="params">(axss, x, y)</span>:</span></span><br><span class="line">    txt = [str(each) <span class="keyword">for</span> each <span class="keyword">in</span> y]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(x)):</span><br><span class="line">        axss.annotate(txt[i], xy=(x[i], y[i]), xytext=(x[i] + <span class="number">0.1</span>, y[i] + <span class="number">0.1</span>))</span><br><span class="line"></span><br><span class="line">fig, axs = plt.subplots(<span class="number">2</span>, <span class="number">2</span>,  constrained_layout=<span class="literal">True</span>)</span><br><span class="line">custome_fig()</span><br><span class="line">axss= axs.flatten()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ax <span class="keyword">in</span> axss:</span><br><span class="line">    init_plot(ax)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    axss[i].plot(x, y[i], types[i], label=labels[i])</span><br><span class="line">    axss[i].plot(x, y_refer[i], types[<span class="number">3</span>], label=<span class="string">'参比'</span>)</span><br><span class="line">    axss[i].legend(loc=<span class="string">'lower right'</span>)</span><br><span class="line">    note(axss[i], x, y[i])</span><br><span class="line">    note_refer(axss[i], x, y_refer[i])</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(len(y)):</span><br><span class="line">    axss[<span class="number">3</span>].plot(x, y[j], types[j], label=labels[j])</span><br><span class="line">axss[<span class="number">3</span>].legend(loc=<span class="string">'lower right'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<h3 id="Version-3-0"><a href="#Version-3-0" class="headerlink" title="Version 3.0"></a>Version 3.0</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">======================================================</span></span><br><span class="line"><span class="string">2020-07-21</span></span><br><span class="line"><span class="string">1、将汇总图拆分成四个子图，前三个分别与参比进行对比，最后一个汇总</span></span><br><span class="line"><span class="string">2、标记子图数据</span></span><br><span class="line"><span class="string">======================================================</span></span><br><span class="line"><span class="string">2020-07-22</span></span><br><span class="line"><span class="string">1、在子图空白处内嵌表格，标记可省略</span></span><br><span class="line"><span class="string">2、子图4显示数据集中的位置</span></span><br><span class="line"><span class="string">3、优化图例大小，画布大小</span></span><br><span class="line"><span class="string">======================================================</span></span><br><span class="line"><span class="string">后续计划</span></span><br><span class="line"><span class="string">1、模块化重新整理代码，原始数据结构优化</span></span><br><span class="line"><span class="string">2、将原始数据归档保存至csv文件或者数据库，方便调用</span></span><br><span class="line"><span class="string">2、图形界面，更方便数据输入</span></span><br><span class="line"><span class="string">======================================================</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'SimHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">batch_NO = <span class="string">'******'</span></span><br><span class="line">x = [<span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">60</span>]</span><br><span class="line">y_refer = [[<span class="number">0</span>, <span class="number">44</span>, <span class="number">84</span>, <span class="number">96</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">101</span>],</span><br><span class="line">           [<span class="number">0</span>, <span class="number">35</span>, <span class="number">75</span>, <span class="number">90</span>, <span class="number">96</span>, <span class="number">99</span>, <span class="number">102</span>],</span><br><span class="line">           [<span class="number">0</span>, <span class="number">31</span>, <span class="number">71</span>, <span class="number">86</span>, <span class="number">93</span>, <span class="number">97</span>, <span class="number">99</span>]]</span><br><span class="line"><span class="comment"># 0.1mol/L盐酸溶液的溶出数据</span></span><br><span class="line">y1 = [<span class="number">0</span>, <span class="number">49</span>, <span class="number">87</span>, <span class="number">92</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>]</span><br><span class="line"><span class="comment"># pH4.5醋酸盐缓冲液的溶出数据</span></span><br><span class="line">y2 = [<span class="number">0</span>, <span class="number">55</span>, <span class="number">84</span>, <span class="number">91</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>]</span><br><span class="line"><span class="comment"># pH6.8磷酸盐缓冲液的溶出数据</span></span><br><span class="line">y3 = [<span class="number">0</span>, <span class="number">42</span>, <span class="number">79</span>, <span class="number">88</span>, <span class="number">91</span>, <span class="number">93</span>, <span class="number">95</span>]</span><br><span class="line">y = [y1, y2, y3]</span><br><span class="line">colors = [<span class="string">'g'</span>, <span class="string">'r'</span>, <span class="string">'b'</span>]</span><br><span class="line">labels = [<span class="string">'0.1mol/L盐酸溶液'</span>, <span class="string">'pH4.5醋酸盐缓冲液'</span>, <span class="string">'pH6.8磷酸盐缓冲液'</span>, batch_NO + <span class="string">'批溶出汇总'</span>]</span><br><span class="line">types = [<span class="string">'go-'</span>, <span class="string">'r^-'</span>, <span class="string">'bs-'</span>, <span class="string">'c*-'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">table_y_vals =[[<span class="number">49</span>, <span class="number">87</span>, <span class="number">92</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>],</span><br><span class="line">               [<span class="number">55</span>, <span class="number">84</span>, <span class="number">91</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>],</span><br><span class="line">               [<span class="number">42</span>, <span class="number">79</span>, <span class="number">88</span>, <span class="number">91</span>, <span class="number">93</span>, <span class="number">95</span>]]</span><br><span class="line">table_refer_vals = [[<span class="number">44</span>, <span class="number">84</span>, <span class="number">96</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">101</span>],</span><br><span class="line">                    [<span class="number">35</span>, <span class="number">75</span>, <span class="number">90</span>, <span class="number">96</span>, <span class="number">99</span>, <span class="number">102</span>],</span><br><span class="line">                    [<span class="number">31</span>, <span class="number">71</span>, <span class="number">86</span>, <span class="number">93</span>, <span class="number">97</span>, <span class="number">99</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_plot</span><span class="params">(ax)</span>:</span></span><br><span class="line">    ax.set_xlabel(<span class="string">'时间(min)'</span>, fontsize=<span class="number">12</span>)</span><br><span class="line">    ax.set_ylabel(<span class="string">'累积溶出百分率(%)'</span>, fontsize=<span class="number">12</span>)</span><br><span class="line">    ax.grid(alpha=<span class="number">0.5</span>, linestyle=<span class="string">'--'</span>)</span><br><span class="line">    ax.axis([<span class="number">0</span>, <span class="number">62</span>, <span class="number">0</span>, <span class="number">105</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">custome_fig</span><span class="params">()</span>:</span></span><br><span class="line">    fig.suptitle(batch_NO + <span class="string">'批包衣片溶出曲线汇总（n=6)'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">note</span><span class="params">(axss, x, y)</span>:</span></span><br><span class="line">    txt = [str(each) <span class="keyword">for</span> each <span class="keyword">in</span> y]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(x)):</span><br><span class="line">        axss.annotate(txt[i], xy=(x[i], y[i]), xytext=(x[i] - <span class="number">3.5</span>, y[i] - <span class="number">10</span>), arrowprops =dict(arrowstyle=<span class="string">'-&gt;'</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">note_refer</span><span class="params">(axss, x, y)</span>:</span></span><br><span class="line">    txt = [str(each) <span class="keyword">for</span> each <span class="keyword">in</span> y]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(x)):</span><br><span class="line">        axss.annotate(txt[i], xy=(x[i], y[i]), xytext=(x[i] + <span class="number">0.1</span>, y[i] + <span class="number">0.1</span>))</span><br><span class="line"></span><br><span class="line">fig, axs = plt.subplots(<span class="number">2</span>, <span class="number">2</span>,  constrained_layout=<span class="literal">True</span>, figsize=(<span class="number">9</span>, <span class="number">6</span>), dpi=<span class="number">120</span>)</span><br><span class="line">custome_fig()</span><br><span class="line">axss = axs.flatten()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ax <span class="keyword">in</span> axss:</span><br><span class="line">    init_plot(ax)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    axss[i].plot(x, y[i], types[i], label=labels[i])</span><br><span class="line">    axss[i].plot(x, y_refer[i], types[<span class="number">3</span>], label=<span class="string">'参比'</span>)</span><br><span class="line">    axss[i].legend(loc=<span class="string">'lower right'</span>)<span class="comment">#, fontsize='x-large')</span></span><br><span class="line">    <span class="comment">#legend.get_title().set_fontsize(fontsize=30)</span></span><br><span class="line">    the_table = axss[i].table(cellText=[table_y_vals[i], table_refer_vals[i]],</span><br><span class="line">                              colWidths=[<span class="number">0.09</span>]*<span class="number">6</span>,</span><br><span class="line">                              rowLabels=[batch_NO, <span class="string">'参比'</span>],</span><br><span class="line">                              colLabels=[<span class="string">'5min'</span>, <span class="string">'10min'</span>, <span class="string">'15min'</span>, \</span><br><span class="line">                                         <span class="string">'20min'</span>, <span class="string">'30min'</span>, <span class="string">'60min'</span>],</span><br><span class="line">                              colLoc=<span class="string">'center'</span>,</span><br><span class="line">                              rowLoc=<span class="string">'center'</span>,</span><br><span class="line">                              rowColours=[<span class="string">'#999999'</span>, <span class="string">'c'</span>],</span><br><span class="line">                              cellLoc=<span class="string">'center'</span>,</span><br><span class="line">                              loc=<span class="string">'center right'</span>)</span><br><span class="line">    the_table.auto_set_font_size(<span class="literal">False</span>)</span><br><span class="line">    the_table.set_fontsize(<span class="number">11</span>)</span><br><span class="line">    the_table.scale(<span class="number">1.1</span>, <span class="number">1.1</span>)</span><br><span class="line">    <span class="comment">#note(axss[i], x, y[i])</span></span><br><span class="line">    <span class="comment">#note_refer(axss[i], x, y_refer[i])</span></span><br><span class="line"></span><br><span class="line">axss[<span class="number">3</span>].axis([<span class="number">0</span>, <span class="number">35</span>, <span class="number">25</span>, <span class="number">100</span>])</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(len(y)):</span><br><span class="line">    axss[<span class="number">3</span>].plot(x, y[j], types[j], label=labels[j])</span><br><span class="line"><span class="comment">#axss[3].set_title(labels[3])</span></span><br><span class="line">axss[<span class="number">3</span>].legend(loc=<span class="string">'lower right'</span>)<span class="comment">#, fontsize='x-large')</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>制剂</category>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>溶出曲线</tag>
      </tags>
  </entry>
</search>
